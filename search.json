[{"path":"https://massimoaria.github.io/openalexR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to openalexR","title":"Contributing to openalexR","text":"First, thank considering contribute openalexR! outlines propose change package. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://massimoaria.github.io/openalexR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to openalexR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://massimoaria.github.io/openalexR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to openalexR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://massimoaria.github.io/openalexR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to openalexR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"massimoaria/openalexR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://massimoaria.github.io/openalexR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to openalexR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://massimoaria.github.io/openalexR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to openalexR","text":"Please note openalexR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"an-r-package-to-gather-bibliographic-data-from-openalex","dir":"Articles","previous_headings":"","what":"An R-package to gather bibliographic data from OpenAlex","title":"A Brief Introduction to openalexR","text":"openalexR helps interface OpenAlex API retrieve bibliographic infomation publications, authors, venues, institutions concepts 4 main functions: oa_query(): generates valid query, written following OpenAlex API syntax, set arguments provided user. oa_request(): downloads collection entities matching query created oa_query() manually written user, returns JSON object list format. oa2df(): converts JSON object classical bibliographic tibble/data frame. oa_fetch(): composes three functions user can execute everything one step, .e., oa_query |> oa_request |> oa2df oa_random(): get random entity, e.g., oa_random(\"works\") gives different work time run ","code":"library(openalexR) library(dplyr)"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"works-think-papers-publications","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Works (think papers, publications)","title":"A Brief Introduction to openalexR","text":"paper: associated OpenAlex-id W2755950973. know paper’s OpenAlex ID, need passing identifier = <openalex id> argument oa_fetch(): oa_fetch() composition functions: oa_query |> oa_request |> oa2df. results, oa_query() returns query string including OpenAlex endpoint API server address (default). oa_request() downloads bibliographic records matching query. Finally, oa2df() converts final result list tibble. final result complicated tibble, can use show_works() display simplified version:","code":"Aria, M., & Cuccurullo, C. (2017). bibliometrix:  An R-tool for comprehensive science mapping analysis.  Journal of informetrics, 11(4), 959-975. paper_id <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works/W2755950973 dplyr::glimpse(paper_id) ## Rows: 1 ## Columns: 28 ## $ id               <chr> \"https://openalex.org/W2755950973\" ## $ display_name     <chr> \"bibliometrix : An R-tool for comprehensive science m… ## $ author           <list> [<data.frame[2 x 10]>] ## $ ab               <lgl> NA ## $ publication_date <chr> \"2017-11-01\" ## $ relevance_score  <lgl> NA ## $ so               <chr> \"Journal of Informetrics\" ## $ so_id            <chr> \"https://openalex.org/V205292342\" ## $ publisher        <chr> \"Elsevier BV\" ## $ issn             <list> <\"1875-5879\", \"1751-1577\"> ## $ url              <lgl> NA ## $ first_page       <chr> \"959\" ## $ last_page        <chr> \"975\" ## $ volume           <chr> \"11\" ## $ issue            <chr> \"4\" ## $ is_oa            <lgl> FALSE ## $ cited_by_count   <int> 2127 ## $ counts_by_year   <list> [<data.frame[8 x 2]>] ## $ publication_year <int> 2017 ## $ cited_by_api_url <chr> \"https://api.openalex.org/works?filter=cites:W2755950… ## $ ids              <list> [<tbl_df[3 x 2]>] ## $ doi              <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" ## $ type             <chr> \"journal-article\" ## $ referenced_works <list> <\"https://openalex.org/W767067438\", \"https://openale… ## $ related_works    <list> <\"https://openalex.org/W1996408511\", \"https://openale… ## $ is_paratext      <lgl> FALSE ## $ is_retracted     <lgl> FALSE ## $ concepts         <list> [<data.frame[2 x 5]>] paper_id %>%    show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"external-id-formats","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"External id formats","title":"A Brief Introduction to openalexR","text":"OpenAlex endpoint accepts OpenAlex IDs external IDs (e.g., DOI, ISSN) several formats, including Digital Object Identifier (DOI) Persistent Identifiers (PIDs).","code":"oa_fetch(   # identifier = \"https://doi.org/10.1016/j.joi.2017.08.007\", # would also work (PIDs)   identifier = \"doi:10.1016/j.joi.2017.08.007\",   entity = \"works\" ) %>%    show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"more-than-one-publicationsauthors","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"More than one publications/authors","title":"A Brief Introduction to openalexR","text":"https://api.openalex.org/authors/https://orcid.org/ know OpenAlex IDs entities, can also feed identifier argument. However, know external identifies, say, DOIs, need use doi filter (either canonical form https://doi.org/ without work):","code":"oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   # identifier = c(\"https://doi.org/10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1016/j.joi.2017.08.007\"), # TODO   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973 ## Getting 1 page of results with a total of 2 records... oa_fetch(   # identifier = c(\"W2741809807\", \"W2755950973\"),   doi = c(\"10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1093/bioinformatics/btab727\"),   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727 ## Getting 1 page of results with a total of 2 records..."},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"filters","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"Filters","title":"A Brief Introduction to openalexR","text":"cases, interested downloading collection items meet one inclusion/exclusion criteria (filters). Supported filters entity listed . Example: want download works published set authors. can filtering authorships.author.id/author.id authorships.author.orcid/author.orcid attribute (see works attributes): Example: want download works cited 50 times, published 2020 2021, include strings “bibliometric analysis” “science mapping” title. Maybe also want results sorted total citations descending order. Setting argument count_only = TRUE, function oa_request() returns number items matching query without downloading collection. can now download records transform tibble/data frame setting count_only = FALSE (also default value): Read see can shorten two function calls.","code":"oa_fetch(   entity = \"works\",   author.id = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE ) %>%    show_works() %>%    knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=author.id%3AA923435168%7CA2208157607 ## Getting 1 page of results with a total of 182 records... orcids <- c(\"0000-0003-3737-6565\", \"0000-0002-8517-9411\") canonical_orcids <- paste0(\"https://orcid.org/\", orcids) oa_fetch(   entity = \"works\",   author.orcid = canonical_orcids,   verbose = TRUE ) %>%    show_works() %>%    knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=author.orcid%3Ahttps%3A%2F%2Forcid.org%2F0000-0003-3737-6565%7Chttps%3A%2F%2Forcid.org%2F0000-0002-8517-9411 ## Getting 2 pages of results with a total of 213 records... oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   sort = \"cited_by_count:desc\",   count_only = TRUE,   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc ##      count db_response_time_ms page per_page ## [1,]    55                  43    1        1 oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   sort = \"cited_by_count:desc\",   count_only = FALSE ) %>%   show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"authors","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Authors","title":"A Brief Introduction to openalexR","text":"Similarly work, can use identifier pass authors’ OpenAlex ID. Example: want information authors IDs A923435168 A2208157607. Example: want download authors’ records scholars work University Naples Federico II (OpenAlex ID: I71267560) published 499 works. Let’s first check many records match query, set count_only = FALSE download entire collection. can first defining list arguments, adding count_only (default FALSE) list: can also use filters display_name, has_orcid, orcid:","code":"oa_fetch(   identifier = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE ) %>%   show_authors() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607 ## Getting 1 page of results with a total of 2 records... my_arguments <- list(   entity = \"authors\",   last_known_institution.id = \"I71267560\",   works_count = \">499\"   )  do.call(oa_fetch, c(my_arguments, list(count_only = TRUE))) ##      count db_response_time_ms page per_page ## [1,]    26                  69    1        1 do.call(oa_fetch, my_arguments) %>%    show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   display_name = \"Massimo Aria\",   has_orcid = \"true\" ) %>%   show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   orcid = \"0000-0002-8517-9411\" ) %>%   show_authors() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"institutions","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Institutions","title":"A Brief Introduction to openalexR","text":"Example: want download records regarding Italian institutions (country_code:) classified educational (type:education). , check many records match query download collection:","code":"italian_insts <- list(   entity = \"institutions\",   country_code = \"it\",   type = \"education\",   verbose = TRUE )  do.call(oa_fetch, c(italian_insts, list(count_only = TRUE))) ## Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation ##      count db_response_time_ms page per_page ## [1,]   231                  28    1        1 dplyr::glimpse(do.call(oa_fetch, italian_insts)) ## Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation ## Getting 2 pages of results with a total of 231 records... ## Rows: 231 ## Columns: 22 ## $ id                        <chr> \"https://openalex.org/I861853513\", \"https://… ## $ display_name              <chr> \"Sapienza University of Rome\", \"University o… ## $ display_name_alternatives <list> \"Università degli Studi di Roma \\\"La Sapien… ## $ display_name_acronyms     <list> NA, \"UNIBO\", \"UNIPD\", \"UNIMI\", NA, NA, \"UNI… ## $ international             <list> [<data.frame[1 x 87]>], [<data.frame[1 x 10… ## $ ror                       <chr> \"https://ror.org/02be6w209\", \"https://ror.or… ## $ ids                       <list> [<tbl_df[6 x 2]>], [<tbl_df[6 x 2]>], [<tbl… ## $ country_code              <chr> \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"I… ## $ geo                       <list> [<data.frame[1 x 7]>], [<data.frame[1 x 7]>… ## $ type                      <chr> \"education\", \"education\", \"education\", \"educ… ## $ homepage_url              <chr> \"http://www.uniroma1.it/\", \"http://www.unibo… ## $ image_url                 <chr> \"https://upload.wikimedia.org/wikipedia/en/4… ## $ image_thumbnail_url       <chr> \"https://upload.wikimedia.org/wikipedia/en/t… ## $ associated_institutions   <list> [<data.frame[4 x 6]>], [<data.frame[2 x 6]>… ## $ relevance_score           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ works_count               <int> 167261, 133442, 131886, 129946, 93637, 88767… ## $ cited_by_count            <int> 11465700, 10339985, 10369696, 9741681, 64279… ## $ counts_by_year            <list> [<data.frame[12 x 3]>], [<data.frame[12 x 3… ## $ works_api_url             <chr> \"https://api.openalex.org/works?filter=insti… ## $ x_concepts                <list> [<data.frame[14 x 5]>], [<data.frame[15 x 5… ## $ updated_date              <chr> \"2023-01-15T15:01:08.575909\", \"2023-01-15T13… ## $ created_date              <chr> \"2016-06-24\", \"2016-06-24\", \"2016-06-24\", \"2…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"venues-think-journals","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Venues (think journals)","title":"A Brief Introduction to openalexR","text":"Example: want download records regarding journals published 100,000 works:","code":"big_journals <- list(   entity = \"venues\",   works_count = \">100000\",   verbose = TRUE )  do.call(oa_fetch, c(big_journals, list(count_only = TRUE))) ## Requesting url: https://api.openalex.org/venues?filter=works_count%3A%3E100000 ##      count db_response_time_ms page per_page ## [1,]   112                  17    1        1 dplyr::glimpse(do.call(oa_fetch, big_journals)) ## Requesting url: https://api.openalex.org/venues?filter=works_count%3A%3E100000 ## Getting 1 page of results with a total of 112 records... ## Rows: 112 ## Columns: 15 ## $ id              <chr> \"https://openalex.org/V2764455111\", \"https://openalex.… ## $ display_name    <chr> \"PubMed Central\", \"PubMed Central - Europe PMC\", \"Alle… ## $ publisher       <chr> NA, \"PubMed Central\", \"Allen Institute for AI\", \"Corne… ## $ issn            <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"… ## $ issn_l          <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"… ## $ is_oa           <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, NA, NA, NA, NA, NA, NA, … ## $ is_in_doaj      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, FA… ## $ ids             <list> [<tbl_df[2 x 2]>], [<tbl_df[1 x 2]>], [<tbl_df[1 x 2]… ## $ homepage_url    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, \"http://www.repec.… ## $ relevance_score <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ works_count     <int> 7321690, 5087564, 2167098, 1950641, 1204825, 948772, 9… ## $ cited_by_count  <int> 237042364, 205081909, 37364244, 30810362, 5007346, 131… ## $ counts_by_year  <list> [<data.frame[12 x 3]>], [<data.frame[12 x 3]>], [<dat… ## $ x_concepts      <list> NA, NA, NA, [<data.frame[3 x 5]>], NA, [<data.frame[2… ## $ works_api_url   <chr> \"https://api.openalex.org/works?filter=host_venue.id:V…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"concepts-think-theme-keywords","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Concepts (think theme, keywords)","title":"A Brief Introduction to openalexR","text":"Example: want download records concepts concern least one million works:","code":"popular_concepts <- list(   entity = \"concepts\",   works_count = \">1000000\",   verbose = TRUE )  do.call(oa_fetch, c(popular_concepts, list(count_only = TRUE))) ## Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 ##      count db_response_time_ms page per_page ## [1,]   237                   2    1        1 dplyr::glimpse(do.call(oa_fetch, popular_concepts)) ## Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 ## Getting 2 pages of results with a total of 237 records... ## Rows: 237 ## Columns: 17 ## $ id                         <chr> \"https://openalex.org/C41008148\", \"https://… ## $ display_name               <chr> \"Computer science\", \"Medicine\", \"Biology\", … ## $ display_name_international <list> [<data.frame[1 x 185]>], [<data.frame[1 x … ## $ description                <chr> \"theoretical study of the formal foundation… ## $ description_international  <list> [<data.frame[1 x 41]>], [<data.frame[1 x 4… ## $ wikidata                   <chr> \"https://www.wikidata.org/wiki/Q21198\", \"ht… ## $ level                      <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0… ## $ ids                        <list> [<tbl_df[5 x 2]>], [<tbl_df[5 x 2]>], [<tb… ## $ image_url                  <chr> \"https://upload.wikimedia.org/wikipedia/com… ## $ image_thumbnail_url        <chr> \"https://upload.wikimedia.org/wikipedia/com… ## $ ancestors                  <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, [<… ## $ related_concepts           <list> [<data.frame[93 x 5]>], [<data.frame[51 x … ## $ relevance_score            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ works_count                <int> 77117927, 57900512, 41859902, 38320223, 339… ## $ cited_by_count             <int> 395026747, 584308217, 638330459, 395442736,… ## $ counts_by_year             <list> [<data.frame[12 x 3]>], [<data.frame[12 x … ## $ works_api_url              <chr> \"https://api.openalex.org/works?filter=conc…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"other-examples","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Other examples","title":"A Brief Introduction to openalexR","text":"Get works citing particular work can download publications citing another publication using filter attribute cites. example, want download publications citing article Aria Cuccurullo (2017), just set argument filter cites = \"W2755950973\" “W2755950973” OA id article Aria Cuccurullo. query return collection NA publications. Among articles, let’s download ones published following year:","code":"aria_count <- oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   count_only = TRUE,   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973 aria_count ##      count db_response_time_ms page per_page ## [1,]  2164                  36    1        1 oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   publication_year = 2018,   count_only = FALSE,   verbose = TRUE ) %>%    dplyr::glimpse() ## Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973%2Cpublication_year%3A2018 ## Getting 1 page of results with a total of 17 records... ## Rows: 17 ## Columns: 28 ## $ id               <chr> \"https://openalex.org/W2902888572\", \"https://openalex… ## $ display_name     <chr> \"A global bibliometric analysis of Plesiomonas-relate… ## $ author           <list> [<data.frame[2 x 10]>], [<data.frame[7 x 10]>], [<da… ## $ ab               <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ publication_date <chr> \"2018-11-29\", \"2018-06-25\", \"2018-04-01\", \"2018-09-27… ## $ relevance_score  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ so               <chr> \"PLOS ONE\", \"PLOS ONE\", \"Journal of Experimental Zool… ## $ so_id            <chr> \"https://openalex.org/V202381698\", \"https://openalex.… ## $ publisher        <chr> \"Public Library of Science\", \"Public Library of Scien… ## $ issn             <list> \"1932-6203\", \"1932-6203\", <\"2471-5638\", \"2471-5646\">… ## $ url              <chr> \"https://journals.plos.org/plosone/article/file?id=10… ## $ first_page       <chr> \"e0207655\", \"e0199706\", \"162\", \"10589\", \"3\", \"38\", NA… ## $ last_page        <chr> \"e0207655\", \"e0199706\", \"176\", \"10604\", \"15\", \"38\", N… ## $ volume           <chr> \"13\", \"13\", \"329\", \"101\", NA, \"4\", NA, \"4\", \"9\", NA, … ## $ issue            <chr> \"11\", \"6\", \"4-5\", \"12\", NA, \"3\", NA, \"11\", NA, NA, \"1… ## $ is_oa            <lgl> TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRU… ## $ cited_by_count   <int> 69, 55, 54, 47, 35, 31, 19, 17, 14, 12, 10, 7, 7, 4, … ## $ counts_by_year   <list> [<data.frame[5 x 2]>], [<data.frame[5 x 2]>], [<data… ## $ publication_year <int> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… ## $ cited_by_api_url <chr> \"https://api.openalex.org/works?filter=cites:W2902888… ## $ ids              <list> [<tbl_df[5 x 2]>], [<tbl_df[5 x 2]>], [<tbl_df[4 x 2… ## $ doi              <chr> \"https://doi.org/10.1371/journal.pone.0207655\", \"http… ## $ type             <chr> \"journal-article\", \"journal-article\", \"journal-articl… ## $ referenced_works <list> <\"https://openalex.org/W177697404\", \"https://openale… ## $ related_works    <list> <\"https://openalex.org/W2150273412\", \"https://openal… ## $ is_paratext      <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ is_retracted     <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ concepts         <list> [<data.frame[11 x 5]>], [<data.frame[18 x 5]>], [<da…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"convert-an-openalex-data-frame-to-a-bibliometrix-object","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Convert an OpenAlex data frame to a bibliometrix object","title":"A Brief Introduction to openalexR","text":"bibliometrix R-package (https://www.bibliometrix.org) provides set tools quantitative research bibliometrics scientometrics. Today represents one used science mapping software world. recent survey bibliometric analysis tools, Moral-Muñoz et al. (2020) wrote: “moment, maybe Bibliometrix Shiny platform contain extensive set techniques implemented, together easiness interface, great software practitioners”. function oa2bibliometrix converts bibliographic data frame works bibliometrix object. object can used input collection science mapping workflow.","code":"bib_ls <- list(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2022-01-01\",   to_publication_date = \"2022-03-31\" )  do.call(oa_fetch, c(bib_ls, list(count_only = TRUE))) ##      count db_response_time_ms page per_page ## [1,]   273                  37    1        1 do.call(oa_fetch, bib_ls) %>%    oa2bibliometrix() %>%    dplyr::glimpse() ## Rows: 273 ## Columns: 41 ## $ AU               <chr> \"YANQIU CHEN;MINGWEI LIN;DAN ZHUANG\", \"YONG QIN;ZESHU… ## $ RP               <chr> \"COLLEGE OF COMPUTER AND CYBER SECURITY, FUJIAN NORMA… ## $ C1               <chr> \"COLLEGE OF COMPUTER AND CYBER SECURITY, FUJIAN NORMA… ## $ AU_UN            <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"… ## $ AU_CO            <chr> \"CHINA;CHINA;CHINA\", \"CHINA;CHINA;CHINA;CROATIA\", \"MA… ## $ ID               <chr> \"WASTEWATER;ENVIRONMENTAL SCIENCE;CONTAMINATION;WEB O… ## $ id_url           <chr> \"https://openalex.org/W4210864411\", \"https://openalex… ## $ author           <list> [<data.frame[3 x 10]>], [<data.frame[4 x 10]>], [<da… ## $ publication_date <chr> \"2022-02-01\", \"2022-01-01\", \"2022-03-08\", \"2022-01-27… ## $ relevance_score  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ so_id            <chr> \"https://openalex.org/V203465130\", \"https://openalex.… ## $ publisher        <chr> \"Elsevier BV\", \"Elsevier BV\", \"Wiley-Blackwell\", \"Spr… ## $ issn             <list> <\"0045-6535\", \"1879-1298\">, <\"1879-0690\", \"1364-0321… ## $ url              <chr> NA, NA, NA, \"https://link.springer.com/content/pdf/10… ## $ first_page       <chr> \"133932\", \"111780\", \"1129\", \"4979\", \"113925\", \"132941… ## $ last_page        <chr> \"133932\", \"111780\", \"1155\", \"5062\", \"113925\", \"132941… ## $ volume           <chr> \"297\", \"153\", \"39\", \"55\", \"301\", \"291\", \"19\", \"69\", \"… ## $ issue            <chr> NA, NA, \"6\", \"6\", NA, NA, \"5\", NA, NA, \"7\", NA, NA, N… ## $ is_oa            <lgl> FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE,… ## $ counts_by_year   <list> [<data.frame[2 x 2]>], [<data.frame[2 x 2]>], [<data… ## $ cited_by_api_url <chr> \"https://api.openalex.org/works?filter=cites:W4210864… ## $ ids              <list> [<tbl_df[3 x 2]>], [<tbl_df[3 x 2]>], [<tbl_df[2 x 2… ## $ doi              <chr> \"https://doi.org/10.1016/j.chemosphere.2022.133932\", … ## $ referenced_works <list> <\"https://openalex.org/W1854025783\", \"https://openal… ## $ related_works    <list> <\"https://openalex.org/W1547839164\", \"https://openal… ## $ is_paratext      <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ is_retracted     <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ concepts         <list> [<data.frame[16 x 5]>], [<data.frame[19 x 5]>], [<da… ## $ id_oa            <chr> \"W4210864411\", \"W3208801174\", \"W4220991995\", \"W421054… ## $ CR               <chr> \"https://openalex.org/W1854025783;https://openalex.or… ## $ TI               <chr> \"WASTEWATER TREATMENT AND EMERGING CONTAMINANTS: BIBL… ## $ AB               <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ SO               <chr> \"CHEMOSPHERE\", \"RENEWABLE & SUSTAINABLE ENERGY REVIEW… ## $ DT               <chr> \"JOURNAL-ARTICLE\", \"JOURNAL-ARTICLE\", \"JOURNAL-ARTICL… ## $ DB               <chr> \"openalex\", \"openalex\", \"openalex\", \"openalex\", \"open… ## $ JI               <chr> \"V203465130\", \"V68497187\", \"V102896891\", \"V122814990\"… ## $ J9               <chr> \"V203465130\", \"V68497187\", \"V102896891\", \"V122814990\"… ## $ PY               <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,… ## $ TC               <int> 21, 17, 16, 12, 11, 11, 11, 11, 10, 10, 9, 9, 9, 9, 9… ## $ SR_FULL          <chr> \"YANQIU CHEN, 2022, CHEMOSPHERE\", \"YONG QIN, 2022, RE… ## $ SR               <chr> \"YANQIU CHEN, 2022, CHEMOSPHERE\", \"YONG QIN, 2022, RE…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"about-openalex","dir":"Articles","previous_headings":"","what":"About OpenAlex","title":"A Brief Introduction to openalexR","text":"oar-img Schema credits: @dhimmel OpenAlex fully open catalog global research system. ’s named ancient Library Alexandria. OpenAlex dataset describes scholarly entities entities connected . five types entities: Works papers, books, datasets, etc; cite works Authors people create works Venues journals repositories host works Institutions universities orgs affiliated works (via authors) Concepts tag Works topic","code":""},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"acknowledgements","dir":"Articles","previous_headings":"About OpenAlex","what":"Acknowledgements","title":"A Brief Introduction to openalexR","text":"Package hex made Midjourney thus inherits CC -NC 4.0 license.","code":""},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"example-1-institutions","dir":"Articles","previous_headings":"","what":"Example 1: institutions","title":"About the tibble output","text":"Suppose queried Open Alex obtain information large Canadian institutions now want extract latitudes longitudes. present three different approaches .","code":"institutions <- oa_fetch(   entity = \"institutions\",   country_code = \"CA\",   cited_by_count = \">4000000\",   verbose = TRUE,   count_only = FALSE ) #> Requesting url: https://api.openalex.org/institutions?filter=country_code%3ACA%2Ccited_by_count%3A%3E4000000 #> Getting 1 page of results with a total of 11 records...  head(institutions) #> # A tibble: 6 × 22 #>   id          displ…¹ displ…² displ…³ inter…⁴ ror   ids      count…⁵ geo   type  #>   <chr>       <chr>   <list>  <list>  <list>  <chr> <list>   <chr>   <lis> <chr> #> 1 https://op… Univer… <lgl>   <lgl>   <df>    http… <tibble> CA      <df>  educ… #> 2 https://op… Univer… <lgl>   <chr>   <df>    http… <tibble> CA      <df>  educ… #> 3 https://op… Univer… <chr>   <lgl>   <df>    http… <tibble> CA      <df>  educ… #> 4 https://op… McGill… <lgl>   <lgl>   <df>    http… <tibble> CA      <df>  educ… #> 5 https://op… Univer… <lgl>   <chr>   <df>    http… <tibble> CA      <df>  educ… #> 6 https://op… Univer… <chr>   <chr>   <df>    http… <tibble> CA      <df>  educ… #> # … with 12 more variables: homepage_url <chr>, image_url <chr>, #> #   image_thumbnail_url <chr>, associated_institutions <list>, #> #   relevance_score <lgl>, works_count <int>, cited_by_count <int>, #> #   counts_by_year <list>, works_api_url <chr>, x_concepts <list>, #> #   updated_date <chr>, created_date <chr>, and abbreviated variable names #> #   ¹​display_name, ²​display_name_alternatives, ³​display_name_acronyms, #> #   ⁴​international, ⁵​country_code"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"dplyrrowwise","dir":"Articles","previous_headings":"Example 1: institutions","what":"dplyr::rowwise","title":"About the tibble output","text":"use rowwise used discouraged, tidyverse team now recognized importance many workflows, rowwise stay. think rowwise pairs naturally list columns output.","code":"institutions %>%   rowwise() %>%   mutate(     name = display_name,     openalex_id = stringr::str_extract(id, \"I\\\\d+\"),     lat = geo$latitude,     lon = geo$longitude,     .keep = \"none\"   ) #> # A tibble: 11 × 4 #> # Rowwise:  #>    name                           openalex_id   lat    lon #>    <chr>                          <chr>       <dbl>  <dbl> #>  1 University of Toronto          I185261750   43.7  -79.4 #>  2 University of British Columbia I141945490   49.3 -123.  #>  3 University of Alberta          I154425047   53.5 -114.  #>  4 McGill University              I5023651     45.5  -73.6 #>  5 University of Calgary          I168635309   51.1 -114.  #>  6 University of Waterloo         I151746483   43.5  -80.5 #>  7 Western University             I125749732   43.0  -81.3 #>  8 University of Ottawa           I153718931   45.4  -75.7 #>  9 University of Montreal         I70931966    45.5  -73.6 #> 10 McMaster University            I98251732    43.3  -79.9 #> 11 Université Laval               I43406934    46.8  -71.3"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"purrrmap","dir":"Articles","previous_headings":"Example 1: institutions","what":"purrr::map","title":"About the tibble output","text":"Alternatively, can use function purrr::map family. can see , syntax little less natural, may gain performance advantage really large dataframe.","code":"institutions %>%   mutate(     name = display_name,     openalex_id = stringr::str_extract(id, \"I\\\\d+\"),     lat = purrr::map_dbl(geo, ~ .x$latitude),     lon = purrr::map_dbl(geo, ~ .x$longitude),     .keep = \"none\"   ) #> # A tibble: 11 × 4 #>    name                           openalex_id   lat    lon #>    <chr>                          <chr>       <dbl>  <dbl> #>  1 University of Toronto          I185261750   43.7  -79.4 #>  2 University of British Columbia I141945490   49.3 -123.  #>  3 University of Alberta          I154425047   53.5 -114.  #>  4 McGill University              I5023651     45.5  -73.6 #>  5 University of Calgary          I168635309   51.1 -114.  #>  6 University of Waterloo         I151746483   43.5  -80.5 #>  7 Western University             I125749732   43.0  -81.3 #>  8 University of Ottawa           I153718931   45.4  -75.7 #>  9 University of Montreal         I70931966    45.5  -73.6 #> 10 McMaster University            I98251732    43.3  -79.9 #> 11 Université Laval               I43406934    46.8  -71.3"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"baselapply","dir":"Articles","previous_headings":"Example 1: institutions","what":"base::lapply","title":"About the tibble output","text":"Similar purrr approach, can use base functions lapply family, example:","code":"institutions %>%   mutate(     name = display_name,     openalex_id = stringr::str_extract(id, \"I\\\\d+\"),     lat = vapply(geo, function(x) x$latitude, numeric(1)),     lon = vapply(geo, function(x) x$longitude, numeric(1)),     .keep = \"none\"   ) #> # A tibble: 11 × 4 #>    name                           openalex_id   lat    lon #>    <chr>                          <chr>       <dbl>  <dbl> #>  1 University of Toronto          I185261750   43.7  -79.4 #>  2 University of British Columbia I141945490   49.3 -123.  #>  3 University of Alberta          I154425047   53.5 -114.  #>  4 McGill University              I5023651     45.5  -73.6 #>  5 University of Calgary          I168635309   51.1 -114.  #>  6 University of Waterloo         I151746483   43.5  -80.5 #>  7 Western University             I125749732   43.0  -81.3 #>  8 University of Ottawa           I153718931   45.4  -75.7 #>  9 University of Montreal         I70931966    45.5  -73.6 #> 10 McMaster University            I98251732    43.3  -79.9 #> 11 Université Laval               I43406934    46.8  -71.3"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"example-2-works","dir":"Articles","previous_headings":"","what":"Example 2: works","title":"About the tibble output","text":"Suppose tibble works output like find institutions corresponding works’ authors. case, work may one affiliated institutions.","code":""},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"tibble-output","dir":"Articles","previous_headings":"Example 2: works","what":"Tibble output","title":"About the tibble output","text":"Assuming author affiliated one institution, can call oa_fetch default output = \"tibble\": store result list column:","code":"works <- oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">100\",   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-01-31\",   sort = \"cited_by_count:desc\",   count_only = FALSE ) multi_insts <- works %>%   rowwise() %>%   mutate(     openalex_id = stringr::str_extract(id, \"W\\\\d+\"),     institutions = list(unique(author$institution_display_name)),     .keep = \"none\"   )  multi_insts #> # A tibble: 12 × 2 #> # Rowwise:  #>    openalex_id institutions #>    <chr>       <list>       #>  1 W3038273726 <chr [2]>    #>  2 W2990450011 <chr [2]>    #>  3 W3001491100 <chr [2]>    #>  4 W3044902155 <chr [1]>    #>  5 W3011866596 <chr [1]>    #>  6 W2990688366 <chr [3]>    #>  7 W3000910650 <chr [3]>    #>  8 W3000049009 <lgl [1]>    #>  9 W2986617680 <chr [2]>    #> 10 W3042215340 <chr [3]>    #> 11 W2999558594 <chr [2]>    #> 12 W3038187379 <chr [10]>  # institutions of the first work str(multi_insts[1, \"institutions\"]) #> rowws_df [1 × 1] (S3: rowwise_df/tbl_df/tbl/data.frame) #>  $ institutions:List of 1 #>   ..$ : chr [1:2] \"University of Southern Denmark\" \"BI Norwegian Business School\" #>  - attr(*, \"groups\")= tibble [1 × 1] (S3: tbl_df/tbl/data.frame) #>   ..$ .rows: list<int> [1:1]  #>   .. ..$ : int 1 #>   .. ..@ ptype: int(0)"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"list-output","dir":"Articles","previous_headings":"Example 2: works","what":"List output","title":"About the tibble output","text":"want get institutions authors works affiliated (since one author may affiliated one institution), want work list output. can see, nested list can convoluted work :","code":"works_list <- oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">100\",   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-01-31\",   sort = \"cited_by_count:desc\",   output = \"list\" )  work_authors <- lapply(works_list, \\(x) x$author)  unique_insts <- sapply(   work_authors,   \\(z) unique(unlist(     sapply(       z, \\(y) sapply(y$institutions, \\(x) x$display_name)     )   )) )  unique_insts[[1]] #> [1] \"University of Southern Denmark\" \"BI Norwegian Business School\""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://massimoaria.github.io/openalexR/articles/Filters.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Filters","text":"","code":"library(openalexR)  lib_concepts <- oa_fetch(   entity = \"concepts\",    level = 3,   works_count = \"<999\",   cited_by_count = \">10000\",   ancestors.id = \"C161191863\",   has_wikidata = TRUE ) dplyr::glimpse(lib_concepts) #> Rows: 3 #> Columns: 17 #> $ id                         <chr> \"https://openalex.org/C2780378607\", \"https:… #> $ display_name               <chr> \"Informetrics\", \"Bibliographic coupling\", \"… #> $ display_name_international <list> [<data.frame[1 x 15]>], [<data.frame[1 x 7… #> $ description                <chr> \"study of the quantitative aspects of infor… #> $ description_international  <list> [<data.frame[1 x 4]>], [<data.frame[1 x 2]… #> $ wikidata                   <chr> \"https://www.wikidata.org/wiki/Q355654\", \"h… #> $ level                      <int> 3, 3, 3 #> $ ids                        <list> [<tbl_df[4 x 2]>], [<tbl_df[4 x 2]>], [<tbl… #> $ image_url                  <lgl> NA, NA, NA #> $ image_thumbnail_url        <lgl> NA, NA, NA #> $ ancestors                  <list> [<data.frame[8 x 4]>], [<data.frame[6 x 4]… #> $ related_concepts           <list> [<data.frame[6 x 5]>], [<data.frame[9 x 5]>… #> $ relevance_score            <lgl> NA, NA, NA #> $ works_count                <int> 963, 681, 631 #> $ cited_by_count             <int> 11265, 11528, 16815 #> $ counts_by_year             <list> [<data.frame[12 x 3]>], [<data.frame[12 x 3… #> $ works_api_url              <chr> \"https://api.openalex.org/works?filter=con…  tech_insts <- oa_fetch(   entity = \"institutions\",    country_code = \"CN\",   x_concepts.id = \"C41008148\",   display_name.search = \"technology\",   has_ror = FALSE ) dplyr::glimpse(tech_insts) #> Rows: 4 #> Columns: 22 #> $ id                        <chr> \"https://openalex.org/I2800748030\", \"https:/… #> $ display_name              <chr> \"Harbin Institute of Technology Shenzhen Gra… #> $ display_name_alternatives <lgl> NA, NA, NA, NA #> $ display_name_acronyms     <lgl> NA, NA, NA, NA #> $ international             <list> [<data.frame[1 x 4]>], [<data.frame[1 x 3]>]… #> $ ror                       <lgl> NA, NA, NA, NA #> $ ids                       <list> [<tbl_df[4 x 2]>], [<tbl_df[4 x 2]>], [<tbl_… #> $ country_code              <chr> \"CN\", \"CN\", \"CN\", \"CN\" #> $ geo                       <list> [<data.frame[1 x 7]>], [<data.frame[1 x 7]>… #> $ type                      <lgl> NA, NA, NA, NA #> $ homepage_url              <chr> NA, \"http://www.shu.edu.cn/\", \"http://www.sh… #> $ image_url                 <chr> \"https://upload.wikimedia.org/wikipedia/com… #> $ image_thumbnail_url       <chr> \"https://upload.wikimedia.org/wikipedia/comm… #> $ associated_institutions   <lgl> NA, NA, NA, NA #> $ relevance_score           <dbl> 3915.2660, 862.4517, 637.0281, 304.0303 #> $ works_count               <int> 7878, 1054, 526, 638 #> $ cited_by_count            <int> 254057, 10317, 3783, 1262 #> $ counts_by_year            <list> [<data.frame[12 x 3]>], [<data.frame[12 x 3… #> $ works_api_url             <chr> \"https://api.openalex.org/works?filter=insti… #> $ x_concepts                <list> [<data.frame[22 x 5]>], [<data.frame[17 x 5]… #> $ updated_date              <chr> \"2023-01-15T12:19:15.525097\", \"2023-01-15T14… #> $ created_date              <chr> \"2018-05-17\", \"2016-06-24\", \"2016-06-24\", \"2…  peer_venues <- oa_fetch(   entity = \"venues\",    publisher = \"Peerj\",   x_concepts.id = \"C185592680\",   is_oa = TRUE,   is_in_doaj = TRUE ) dplyr::glimpse(peer_venues) #> Rows: 1 #> Columns: 15 #> $ id              <chr> \"https://openalex.org/V4210220408\" #> $ display_name    <chr> \"PeerJ physical chemistry\" #> $ publisher       <chr> \"PeerJ\" #> $ issn            <list> \"2689-7733\" #> $ issn_l          <list> \"2689-7733\" #> $ is_oa           <lgl> TRUE #> $ is_in_doaj      <lgl> TRUE #> $ ids             <list> [<tbl_df[5 x 2]>] #> $ homepage_url    <chr> \"https://peerj.com/physical-chemistry/\" #> $ relevance_score <lgl> NA #> $ works_count     <int> 19 #> $ cited_by_count  <int> 88 #> $ counts_by_year  <list> [<data.frame[4 x 3]>] #> $ x_concepts      <list> [<data.frame[34 x 5]>] #> $ works_api_url   <chr> \"https://api.openalex.org/works?filter=host_venue.id:V…"},{"path":"https://massimoaria.github.io/openalexR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Massimo Aria. Author, maintainer, copyright holder. Corrado Cuccurullo. Contributor. Trang Le. Author.","code":""},{"path":"https://massimoaria.github.io/openalexR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aria M, Le T (2023). openalexR: Getting Bibliographic Records 'OpenAlex' Database Using 'DSL' API. https://github.com/massimoaria/openalexR, https://massimoaria.github.io/openalexR/.","code":"@Manual{,   title = {openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API},   author = {Massimo Aria and Trang Le},   year = {2023},   note = {https://github.com/massimoaria/openalexR, https://massimoaria.github.io/openalexR/}, }"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"openalexr-","dir":"","previous_headings":"","what":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"openalexR helps interface OpenAlex API retrieve bibliographic infomation publications, authors, venues, institutions concepts 5 main functions: oa_fetch: composes three functions user can execute everything one step, .e., oa_query |> oa_request |> oa2df oa_query: generates valid query, written following OpenAlex API syntax, set arguments provided user. oa_request: downloads collection entities matching query created oa_query manually written user, returns JSON object list format. oa2df: converts JSON object classical bibliographic tibble/data frame. oa_random: get random entity, e.g., oa_random(\"works\") gives different work time run ","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"can install developer version openalexR GitHub : can install released version openalexR CRAN : go , highly recommend set openalexR.mailto option requests go polite pool faster response times: Bonus point put .Rprofile file.edit(\"~/.Rprofile\").","code":"install.packages(\"remotes\") remotes::install_github(\"massimoaria/openalexR\") install.packages(\"openalexR\") options(openalexR.mailto = \"example@email.com\") library(openalexR) library(dplyr) library(ggplot2)"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"different filters/arguments can use oa_fetch, depending entity ’re interested : works, authors, venues, institutions, concepts. show examples .","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"works","dir":"","previous_headings":"Examples","what":"Works","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Goal: Download information givens set publications (known DOIs). Use doi works filter (either canonical form https://doi.org/ without): Goal: Download works published set authors (known ORCIDs). Use author.orcid filter (either canonical form https://orcid.org/ without work): Goal: Download works cited 50 times, published 2020 2021, include strings “bibliometric analysis” “science mapping” title. Maybe also want results sorted total citations descending order.","code":"oa_fetch(   doi = c(\"10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1093/bioinformatics/btab727\"),   entity = \"works\",   verbose = TRUE ) %>%   show_works() %>%   knitr::kable() #> Requesting url: https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727 #> Getting 1 page of results with a total of 2 records... oa_fetch(   entity = \"works\",   author.orcid = c(\"0000-0003-3737-6565\", \"0000-0002-8517-9411\"),   verbose = TRUE ) %>%   show_works() %>%   knitr::kable() #> Requesting url: https://api.openalex.org/works?filter=author.orcid%3A0000-0003-3737-6565%7C0000-0002-8517-9411 #> Getting 2 pages of results with a total of 211 records... oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   sort = \"cited_by_count:desc\",   verbose = TRUE ) %>%   show_works() %>%   knitr::kable() #> Requesting url: https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc #> Getting 1 page of results with a total of 45 records..."},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"authors","dir":"","previous_headings":"Examples","what":"Authors","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Goal: Download author information know ORCID. , instead author.orcid like earlier, use orcid argument. may little confusing, , different entity (authors instead works) requires different set filters. Goal: Acquire information authors package. can use filters display_name has_orcid: Goal: Download authors’ records scholars work University Naples Federico II (OpenAlex ID: I71267560) published least 500 publications. Let’s first check many records match query, download entire collection. can first defining list arguments, adding count_only (default FALSE) list:","code":"oa_fetch(   entity = \"authors\",   orcid = c(\"0000-0003-3737-6565\", \"0000-0002-8517-9411\") ) %>%   show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   display_name = c(\"Massimo Aria\", \"Trang T. Le\"),   has_orcid = TRUE ) %>%   show_authors() %>%   knitr::kable() my_arguments <- list(   entity = \"authors\",   last_known_institution.id = \"I71267560\",   works_count = \">499\" )  do.call(oa_fetch, c(my_arguments, list(count_only = TRUE))) #>      count db_response_time_ms page per_page #> [1,]    27                  59    1        1 do.call(oa_fetch, my_arguments) %>%   show_authors() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"example-analyses","dir":"","previous_headings":"","what":"Example analyses","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Goal: track popularity Biology concepts time. first download records level-1 concepts/keywords concern one million works:  Goal: Rank institutions Italy total number citations. want download records regarding Italian institutions (country_code:) classified educational (type:education). , check many records match query download collection:  publish ?  Goal: Visualize big journals’ topics. first download records regarding journals published 300,000 works, visualize scored concepts:","code":"library(gghighlight) concept_df <- oa_fetch(   entity = \"concepts\",   level = 1,   ancestors.id = \"https://openalex.org/C86803240\", # Biology   works_count = \">1000000\" )  concept_df %>%   select(display_name, counts_by_year) %>%   tidyr::unnest(counts_by_year) %>%   filter(year < 2022) %>%   ggplot() +   aes(x = year, y = works_count, color = display_name) +   facet_wrap(~display_name) +   geom_line(linewidth = 0.7) +   scale_color_brewer(palette = \"Dark2\") +   labs(     x = NULL, y = \"Works count\",     title = \"Virology spiked in 2020.\"   ) +   guides(color = \"none\") +   gghighlight(     max(works_count) > 244000,      label_params = list(nudge_y = 10^5, segment.color = NA)   ) #> label_key: display_name italy_insts <- oa_fetch(   entity = \"institutions\",   country_code = \"it\",   type = \"education\",   verbose = TRUE ) #> Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation #> Getting 2 pages of results with a total of 231 records...  italy_insts %>%   slice_max(cited_by_count, n = 8) %>%   mutate(display_name = forcats::fct_reorder(display_name, cited_by_count)) %>%   ggplot() +   aes(x = cited_by_count, y = display_name, fill = display_name) +   geom_col() +   scale_fill_viridis_d(option = \"E\") +   guides(fill = \"none\") +   labs(     x = \"Total citations\", y = NULL,     title = \"Italian references\"   ) +   coord_cartesian(expand = FALSE) concept_cloud <- italy_insts %>%   select(inst_id = id, x_concepts) %>%   tidyr::unnest(x_concepts) %>%   filter(level == 1) %>%   select(display_name, score) %>%   group_by(display_name) %>%   summarise(score = sum(score))  pal <- c(\"black\", scales::brewer_pal(palette = \"Set1\")(5)) set.seed(1) wordcloud::wordcloud(   concept_cloud$display_name,   concept_cloud$score,   scale = c(2, .4),   colors = pal ) jours <- oa_fetch(   entity = \"venues\",   works_count = \">500000\",   verbose = TRUE ) %>%   filter(publisher != \"Elsevier\"|is.na(publisher)) %>%   distinct(display_name, .keep_all = TRUE) %>%   select(jour = display_name, x_concepts) %>%   tidyr::unnest(x_concepts) %>%   filter(level == 0) %>%   left_join(concept_abbrev) %>%   mutate(abbreviation = gsub(\" \", \"<br>\", abbreviation)) %>%   tidyr::complete(jour, abbreviation, fill = list(score = 0)) %>%   group_by(jour) %>%   mutate(     color = if_else(score > 10, \"#1A1A1A\", \"#D9D9D9\"), # CCCCCC     label = paste0(\"<span style='color:\", color, \"'>\", abbreviation, \"<\/span>\")   )  jours %>%   ggplot() +   aes(fill = jour, y = score, x = abbreviation, group = jour) +   facet_wrap(~jour) +   geom_hline(yintercept = c(45, 90), colour = \"grey90\", linewidth = 0.2) +   geom_segment(     aes(x = abbreviation, xend = abbreviation, y = 0, yend = 100),     color = \"grey95\"   ) +   geom_col(color = \"grey20\") +   coord_polar(clip = \"off\") +   theme_bw() +   theme(     plot.background = element_rect(fill = \"transparent\", colour = NA),     panel.background = element_rect(fill = \"transparent\", colour = NA),     panel.grid = element_blank(),     panel.border = element_blank(),     axis.text = element_blank(),     axis.ticks.y = element_blank()   ) +   ggtext::geom_richtext(     aes(y = 120, label = label),     fill = NA, label.color = NA, size = 3   ) +   scale_fill_brewer(palette = \"Set1\") +   guides(fill = \"none\") +   labs(y = NULL, x = NULL, title = \"Journal clocks\")"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"snowball-search","dir":"","previous_headings":"","what":"Snowball search","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"user can also perform snowballing oa_snowball. Snowballing literature search technique researcher starts set articles find articles cite cited original set. oa_snowball returns list 2 elements: nodes edges. Similar oa_fetch, oa_snowball finds returns information core set articles satisfying certain criteria, , unlike oa_fetch, also returns information articles cite cited core set.","code":"library(ggraph) library(tidygraph) #>  #> Attaching package: 'tidygraph' #> The following object is masked from 'package:stats': #>  #>     filter  snowball_docs <- oa_snowball(   identifier = c(\"W1964141474\", \"W1963991285\"),   verbose = TRUE ) #> Requesting url: https://api.openalex.org/works?filter=openalex_id%3AW1964141474%7CW1963991285 #> Getting 1 page of results with a total of 2 records... #> Collecting all documents citing the target papers... #> Requesting url: https://api.openalex.org/works?filter=cites%3AW1963991285%7CW1964141474 #> Getting 3 pages of results with a total of 451 records... #> Collecting all documents cited by the target papers... #> Requesting url: https://api.openalex.org/works?filter=cited_by%3AW1963991285%7CW1964141474 #> Getting 1 page of results with a total of 87 records...  ggraph(graph = as_tbl_graph(snowball_docs), layout = \"stress\") +   geom_edge_link(aes(alpha = after_stat(index)), show.legend = FALSE) +   geom_node_point(aes(fill = oa_input, size = cited_by_count), shape = 21) +   geom_node_label(aes(filter = oa_input, label = id), nudge_y = 0.2, size = 3) +   scale_edge_width(range = c(0.1, 1.5), guide = \"none\") +   scale_size(range = c(3, 10), guide = \"none\") +   scale_fill_manual(values = c(\"#1A5878\", \"#C44237\"), na.value = \"grey\", name = \"\") +   theme_graph() +   theme(legend.position = \"bottom\") +   guides(fill = \"none\")"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"about-openalex","dir":"","previous_headings":"","what":"About OpenAlex","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"oar-img Schema credits: @dhimmel OpenAlex fully open catalog global research system. ’s named ancient Library Alexandria. OpenAlex dataset describes scholarly entities entities connected . five types entities: Works papers, books, datasets, etc; cite works Authors people create works Venues journals repositories host works Institutions universities orgs affiliated works (via authors) Concepts tag Works topic","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Package hex made Midjourney thus inherits CC -NC 4.0 license.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/authors2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"converts bibliographic collection authors' records gathered OpenAlex database https://openalex.org/ data frame. function converts list authors' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/authors2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"","code":"authors2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/authors2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information querying process. Default verbose = FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/authors2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/authors2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"","code":"if (FALSE) {  # Query to search information about all authors affiliated to the University of Naples Federico II # which have authored at least 100 publications:  # University of Naples Federico II is associated to the OpenAlex id I71267560.   query_author <- oa_query(   identifier = NULL,   entity = \"authors\",   last_known_institution.id = \"I71267560\",   works_count = \">99\" )  res <- oa_request(   query_url = query_author,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"authors\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/concept_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"Concepts and abbreviations. — concept_abbrev","title":"Concepts and abbreviations. — concept_abbrev","text":"0-level concepts corresponding abbreviations. Reference: https://www.ncbi.nlm.nih.gov/nlmcatalog/journals/","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/concept_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concepts and abbreviations. — concept_abbrev","text":"","code":"concept_abbrev"},{"path":"https://massimoaria.github.io/openalexR/reference/concept_abbrev.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Concepts and abbreviations. — concept_abbrev","text":"data frame 19 observations 3 variables: id, display_name, abbreviation.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/concepts2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"converts bibliographic collection concepts' records gathered OpenAlex database https://openalex.org/ data frame. function converts list concepts' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/concepts2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"","code":"concepts2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/concepts2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information querying process. Default verbose = FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/concepts2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/concepts2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"","code":"if (FALSE) {  # Query to search information about all Italian educational institutions   query_inst <- oa_query(   entity = \"concepts\",   display_name.search = \"electrodynamics\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"concepts\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/countrycode.html","id":null,"dir":"Reference","previous_headings":"","what":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"Data frame contains list countries alpha-2 aplha-3 codes.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/countrycode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"","code":"countrycode"},{"path":"https://massimoaria.github.io/openalexR/reference/countrycode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"data frame 250 rows 3 variables: Country country names Alpha2 countries' alpha-2 codes Alpha3 countries' alpha-3 codes","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/institutions2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"converts bibliographic collection institutions' records gathered OpenAlex database https://openalex.org/ data frame. function converts list institutions' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/institutions2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"","code":"institutions2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/institutions2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information querying process. Default verbose = FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/institutions2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/institutions2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"","code":"if (FALSE) {  # Query to search information about all Italian educational institutions  query_inst <- oa_query(   entity = \"institutions\",   country_code = \"it\",   type = \"education\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  oa2df(res, entity = \"institutions\") }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/ngram2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a ","title":"Convert a ","text":"Convert \"Work\" entity's ngram data list data frame","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/ngram2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a ","text":"","code":"ngram2df(ngram)"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"converts bibliographic collections gathered OpenAlex database https://openalex.org/ bibliometrix data frame (https://bibliometrix.org/)","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"","code":"oa2bibliometrix(df)"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"df bibliographic collection works donwloaded OpenALex.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"data.frame class \"bibliometrix\".","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"works\")  M <- oa2bibliometrix(df) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection from list to data frame — oa2df","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"converts bibliographic collections gathered OpenAlex database https://openalex.org/ data frame. function converts collection records works, authors, institutions, venues concepts obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"","code":"oa2df(   data,   entity,   abstract = TRUE,   count_only = FALSE,   group_by = NULL,   verbose = TRUE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"data List. Output oa_request. entity Character. Scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). abstract Logical. TRUE, function returns also abstract item. Ignored entity different \"works\". Defaults TRUE. count_only Logical. TRUE, function returns number item matching query. Defaults FALSE. group_by Character. Attribute group . example: \"oa_status\" works. See <https://docs.openalex.org/api/get-groups--entities>. verbose Logical. TRUE, print information querying process. Default verbose = FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"tibble/dataframe result original OpenAlex result list.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-04-30\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  oa2df(res, entity = \"works\") }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":null,"dir":"Reference","previous_headings":"","what":"Available entities in the OpenAlex database — oa_entities","title":"Available entities in the OpenAlex database — oa_entities","text":"Available entities OpenAlex database","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available entities in the OpenAlex database — oa_entities","text":"","code":"oa_entities()"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available entities in the OpenAlex database — oa_entities","text":"Character vector 5 entity options.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available entities in the OpenAlex database — oa_entities","text":"","code":"oa_entities() #> [1] \"works\"        \"authors\"      \"venues\"       \"institutions\" \"concepts\""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"composition function perform query building, requesting, convert result tibble/data frame.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"","code":"oa_fetch(   identifier = NULL,   entity = if (is.null(identifier)) NULL else id_type(identifier[[1]]),   ...,   search = NULL,   sort = NULL,   group_by = NULL,   output = c(\"tibble\", \"dataframe\", \"list\"),   abstract = FALSE,   endpoint = \"https://api.openalex.org/\",   per_page = 200,   count_only = FALSE,   mailto = oa_email(),   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"identifier Character. OpenAlex ID(s) item identifier(s). See <https://docs.openalex.org/--data#-openalex-id>. entity Character. Scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). provided, `entity` guessed `identifier`. ... Additional filter arguments. search Character. Search just another kind filter, one five endpoints support. unlike filters, search require exact match. filter using search, append .search end attribute filtering . sort Character. Attribute sort . example: \"display_name\" venues \"cited_by_count:desc\" works. See <https://docs.openalex.org/api/get-lists--entities/sort-entity-lists>. group_by Character. Attribute group . example: \"oa_status\" works. See <https://docs.openalex.org/api/get-groups--entities>. output Character. Type output, either list tibble/data.frame. abstract Logical. TRUE, function returns also abstract item. Default abstract = FALSE. argument ignored entity different \"works\". endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org/\". per_page Numeric. Number items download per page. per-page argument can assume number 1 200. Defaults 200. count_only Logical. TRUE, function returns number item matching query. Defaults FALSE. mailto Character string. Gives OpenAlex email enter polite pool. verbose Logical. TRUE, print information querying process. Default verbose = FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"data.frame list. Result query.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"","code":"if (FALSE) {  paper_meta <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   count_only = TRUE,   abstract = TRUE,   verbose = TRUE )  oa_fetch(   entity = \"works\",   doi = c(     \"10.1371/journal.pone.0266781\",     \"10.1371/journal.pone.0267149\"   ),   verbose = TRUE,   count_only = TRUE )  oa_fetch(   entity = \"works\",   doi = c(     \"10.1371/journal.pone.0266781\",     \"10.1371/journal.pone.0267149\"   ),   verbose = TRUE )  oa_fetch(   identifier = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_ngrams.html","id":null,"dir":"Reference","previous_headings":"","what":"Get N-grams of works — oa_ngrams","title":"Get N-grams of works — oa_ngrams","text":"work entities OpenAlex include N-grams (word sequences frequencies) full text. N-grams obtained Internet Archive, uses spaCy parser index scholarly works. See <https://docs.openalex.org/api/get-n-grams> coverage technical details.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_ngrams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get N-grams of works — oa_ngrams","text":"","code":"oa_ngrams(works_identifier, ..., verbose = FALSE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_ngrams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get N-grams of works — oa_ngrams","text":"works_identifier Character. OpenAlex ID(s) \"works\" entities item identifier(s). IDs start \"W\". See <https://docs.openalex.org/--data/work#id>. ... Unused. verbose Logical. TRUE, print information querying process. Defaults TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_ngrams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get N-grams of works — oa_ngrams","text":"dataframe paper metadatada list-column ngrams.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_ngrams.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get N-grams of works — oa_ngrams","text":"faster implementation available `curl` >= v5.0.0, `oa_ngrams` issue one-time message . can suppressed `options(\"oa_ngrams.message.curlv5\" = FALSE)`.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_ngrams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get N-grams of works — oa_ngrams","text":"","code":"if (FALSE) {  ngrams_data <- oa_ngrams(c(\"W1963991285\", \"W1964141474\"))  library(dplyr) first_paper_ngrams <- ngrams_data$ngrams[[1]] top_10_ngrams <- first_paper_ngrams %>%   slice_max(ngram_count, n = 10, with_ties = FALSE)  # Missing N-grams are `NULL` in the `ngrams` list-column oa_ngrams(\"https://openalex.org/W2284876136\")  }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an OpenAlex query from a set of parameters — oa_query","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"generates valid query, written following OpenAlex API Language, set parameters.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"","code":"oa_query(   filter = NULL,   multiple_id = FALSE,   identifier = NULL,   entity = if (is.null(identifier)) NULL else id_type(identifier[[1]]),   search = NULL,   sort = NULL,   group_by = NULL,   endpoint = \"https://api.openalex.org/\",   verbose = FALSE,   ... )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"filter Character string. Filters narrow list just entities meet particular condition--specifically, particular value particular attribute. Filters formatted attribute = value. complete list filter attributes entity can found <https://docs.openalex.org/api/get-lists--entities#filter>. example, `cited_by_count = \">100\"`, `title.search = c(\"bibliometric analysis\", \"science mapping\")`, `to_publication_date = \"2021-12-31\"`. multiple_id Logical. Whether multiple identifiers. identifier Character. OpenAlex ID(s) item identifier(s). See <https://docs.openalex.org/--data#-openalex-id>. entity Character. Scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). provided, `entity` guessed `identifier`. search Character. Search just another kind filter, one five endpoints support. unlike filters, search require exact match. filter using search, append .search end attribute filtering . sort Character. Attribute sort . example: \"display_name\" venues \"cited_by_count:desc\" works. See <https://docs.openalex.org/api/get-lists--entities/sort-entity-lists>. group_by Character. Attribute group . example: \"oa_status\" works. See <https://docs.openalex.org/api/get-groups--entities>. endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org/\". verbose Logical. TRUE, print information querying process. Default verbose = FALSE. ... Additional filter arguments.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"character containing query OpenAlex format. extensive information OpenAlex API, please visit: <https://docs.openalex.org/api>.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"","code":"if (FALSE) {  query_auth <- oa_query(identifier = \"A923435168\", verbose = TRUE)  ### EXAMPLE 1: Full record about an entity.  # Query to obtain allinformation about a particular work/author/institution/etc.:  #  The following paper is associated to the OpenAlex-id W2755950973.  #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  query_work <- oa_query(   identifier = \"W2755950973\",   verbose = TRUE )   #  The author Massimo Aria is associated to the OpenAlex-id A923435168:  query_auth <- oa_query(identifier = \"A923435168\", verbose = TRUE)   ### EXAMPLE 2: all works citing a particular work.  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query1 <- oa_query(   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   verbose = TRUE )  ### EXAMPLE 3: All works matching a string in their title  # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in the first half of 2021.  # Results have to be sorted by relevance score in a descending order.  query2 <- oa_query(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-06-30\",   sort = \"cited_by_count:desc\",   verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":null,"dir":"Reference","previous_headings":"","what":"oa_fetch but for a random query — oa_random","title":"oa_fetch but for a random query — oa_random","text":"oa_fetch random query","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"oa_fetch but for a random query — oa_random","text":"","code":"oa_random(   entity = oa_entities(),   output = c(\"tibble\", \"dataframe\", \"list\"),   endpoint = \"https://api.openalex.org/\" )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"oa_fetch but for a random query — oa_random","text":"entity Character. Scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). provided, `entity` guessed `identifier`. output Character. Type output, either list tibble/data.frame. endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org/\".","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"oa_fetch but for a random query — oa_random","text":"data.frame list. One row one element. Result random query.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"oa_fetch but for a random query — oa_random","text":"","code":"oa_random() #> # A tibble: 1 × 28 #>   id        displ…¹ author ab    publi…² relev…³ so    so_id publi…⁴ issn  url   #>   <chr>     <chr>   <list> <lgl> <chr>   <lgl>   <chr> <chr> <lgl>   <lis> <chr> #> 1 https://… 2，4-D… <df>   NA    2006-0… NA      中国… http… NA      <lgl> http… #> # … with 17 more variables: first_page <chr>, last_page <chr>, volume <chr>, #> #   issue <chr>, is_oa <lgl>, cited_by_count <int>, counts_by_year <lgl>, #> #   publication_year <int>, cited_by_api_url <chr>, ids <list>, doi <lgl>, #> #   type <lgl>, referenced_works <lgl>, related_works <lgl>, is_paratext <lgl>, #> #   is_retracted <lgl>, concepts <list>, and abbreviated variable names #> #   ¹​display_name, ²​publication_date, ³​relevance_score, ⁴​publisher"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bibliographic records from OpenAlex database — oa_request","title":"Get bibliographic records from OpenAlex database — oa_request","text":"`oa_request` makes request downloads bibliographic records OpenAlex database https://openalex.org/. function oa_request queries OpenAlex database using query formulated function oa_query.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bibliographic records from OpenAlex database — oa_request","text":"","code":"oa_request(   query_url,   per_page = 200,   count_only = FALSE,   mailto = oa_email(),   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bibliographic records from OpenAlex database — oa_request","text":"query_url Character string. search query formulated using OpenAlex API language can generated oa_query. per_page Numeric. Number items download per page. per-page argument can assume number 1 200. Defaults 200. count_only Logical. TRUE, function returns number item matching query. Defaults FALSE. mailto Character string. Gives OpenAlex email enter polite pool. verbose Logical. TRUE, print information querying process. Defaults TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bibliographic records from OpenAlex database — oa_request","text":"data.frame list bibliographic records. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bibliographic records from OpenAlex database — oa_request","text":"","code":"if (FALSE) {  ### EXAMPLE 1: Full record about an entity.  # Query to obtain all information about a particular work/author/institution/etc.:  #  The following paper is associated to the OpenAlex-id W2755950973.  #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.   query_work <- oa_query(   identifier = \"W2755950973\",   entity = \"works\",   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query_work,   count_only = FALSE,   verbose = FALSE )  #  The author Massimo Aria is associated to the OpenAlex-id A923435168.   query_author <- oa_query(   identifier = \"A923435168\",   entity = \"authors\",   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query_author,   count_only = FALSE,   verbose = FALSE )    ### EXAMPLE 2: all works citing a particular work.  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query2 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = \"cites:W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res2 <- oa_request(   query_url = query2,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 3: All works matching a string in their title  # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in 2020 or 2021.  # Results have to be sorted by relevance score in a descending order.   query3 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = 'title.search:\"bibliometric analysis\"|\"science mapping\"',   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res3 <- oa_request(   query_url = query3,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 4: How to check how many works match a query # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in 2020 or 2021.  # Query only to know how many works could be retrieved (count_only=TRUE)  query4 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = 'title.search:\"bibliometric analysis\"|\"science mapping\"',   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res4 <- oa_request(   query_url = query4,   count_only = TRUE,   verbose = FALSE )  res4$count # number of items retrieved by our query }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"function perform snowball search convert result tibble/data frame.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"","code":"oa_snowball(   identifier = NULL,   ...,   id_type = c(\"short\", \"original\"),   mailto = oa_email(),   endpoint = \"https://api.openalex.org/\",   verbose = FALSE,   citing_filter = list(),   cited_by_filter = list() )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"identifier Character vector openalex_id identifiers. ... Additional arguments pass `oa_fetch` querying input works, `doi`. id_type Type OpenAlex IDs return. Defaults \"short\", remove prefix https://openalex.org/ works' IDs, example, W2755950973. \"original\", OpenAlex IDs kept , example, https://openalex.org/W2755950973 mailto Character string. Gives OpenAlex email enter polite pool. endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org/\". verbose Logical. TRUE, print information querying process. Default verbose = FALSE. citing_filter filters used search works citing input works. cited_by_filter filters used search works cited input works.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"list containing 2 elements: - nodes: dataframe publication records. last column `oa_input` indicates whether work one input `identifier`(s). - edges: publication link dataframe 2 columns `, ` row `, B` means -> B means cites B. bibliometrics, \"citation action\" comes B.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"","code":"if (FALSE) {  snowball_docs <- oa_snowball(   identifier = c(\"W2741809807\", \"W2755950973\"),   citing_filter = list(from_publication_date = \"2022-01-01\"),   cited_by_filter = list(),   verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/openalexR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","title":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","text":"set tools extract bibliographic content 'OpenAlex' database using API https://docs.openalex.org/api/.","code":""},{"path":[]},{"path":"https://massimoaria.github.io/openalexR/reference/openalexR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","text":"Maintainer: Massimo Aria aria@unina.(ORCID) [copyright holder] Authors: Trang Le grixor@gmail.com (ORCID) contributors: Corrado Cuccurullo cuccurullocorrado@gmail.com (ORCID) [contributor]","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the OpenAlex authors result — show_authors","title":"Simplify the OpenAlex authors result — show_authors","text":"function mostly package's internal use, export can try . However, expect likely write function simplify result however want.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the OpenAlex authors result — show_authors","text":"","code":"show_authors(x, simp_func = utils::head)"},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the OpenAlex authors result — show_authors","text":"x Dataframe/tibble. Result OpenAlex query authors already converted dataframe/tibble. simp_func R function simplify result. Default `head`. want entire table, set `simp_fun = identity`","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the OpenAlex authors result — show_authors","text":"Simplified tibble display. first column, `id` short-form OpenAlex ID authors.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify the OpenAlex authors result — show_authors","text":"","code":"show_authors(oa_fetch(   identifier = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE )) #> Requesting url: https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607 #> Getting 1 page of results with a total of 2 records... #> # A tibble: 2 × 7 #>   id          display_name orcid               works_c…¹ cited…² affil…³ top_c…⁴ #>   <chr>       <chr>        <chr>                   <int>   <int> <chr>   <chr>   #> 1 A923435168  Massimo Aria 0000-0002-8517-9411       132    3351 Univer… Statis… #> 2 A2208157607 Jason Priem  0000-0001-6187-6610        49    1654 HortRe… World … #> # … with abbreviated variable names ¹​works_count, ²​cited_by_count, #> #   ³​affiliation_display_name, ⁴​top_concepts"},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the OpenAlex works result — show_works","title":"Simplify the OpenAlex works result — show_works","text":"function mostly package's internal use, export can try . However, expect likely write function simplify result however want.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the OpenAlex works result — show_works","text":"","code":"show_works(x, simp_func = utils::head)"},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the OpenAlex works result — show_works","text":"x Dataframe/tibble. Result OpenAlex query authors already converted dataframe/tibble. simp_func R function simplify result. Default `head`. want entire table, set `simp_fun = identity`.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the OpenAlex works result — show_works","text":"Simplified tibble display. first column, `id` short-form OpenAlex ID works","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify the OpenAlex works result — show_works","text":"","code":"show_works(oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   verbose = TRUE )) #> Requesting url: https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973 #> Getting 1 page of results with a total of 2 records... #> # A tibble: 2 × 8 #>   id          display_name             first…¹ last_…² so    url   is_oa top_c…³ #>   <chr>       <chr>                    <chr>   <chr>   <chr> <chr> <lgl> <chr>   #> 1 W2755950973 bibliometrix : An R-too… Massim… Corrad… Jour… NA    FALSE Data s… #> 2 W2741809807 The state of OA: a larg… Heathe… Stefan… PeerJ http… TRUE  Citati… #> # … with abbreviated variable names ¹​first_author, ²​last_author, ³​top_concepts"},{"path":"https://massimoaria.github.io/openalexR/reference/snowball2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten snowball result — snowball2df","title":"Flatten snowball result — snowball2df","text":"|  id|title |...|cited_by_count| referenced_works   |cited_by |...| | 100|foo   |...|             1| 98, 99             |101      |...| | 200|bar   |...|             2| 198, 199           |201, 202 |...| | 300|wug   |...|             2| 296, 297, 298, 299 |301, 302 |...|","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/snowball2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten snowball result — snowball2df","text":"","code":"snowball2df(data, verbose = FALSE)"},{"path":"https://massimoaria.github.io/openalexR/reference/snowball2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten snowball result — snowball2df","text":"data List result `oa_snowball`. verbose Logical. TRUE, print information wrangling process.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/snowball2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten snowball result — snowball2df","text":"Tibble/data.frame works additional columns: append `citing`, `backward_count`, `cited_by`, `forward_count`, `connection`, `connection_count.` work/row, counts WITHIN one data search, `forward_count` <= `cited_by_count`. Consider universe works linked set starting works, (`oa_input = TRUE`) work/row : - citing: works universe cites - backward_count: number works universe cites - cited_by: works cited - forward_count: number works universe cited - connection: works universe linked - connection_count: number works universe linked (degree )","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/snowball2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten snowball result — snowball2df","text":"","code":"if (FALSE) { flat_snow <- snowball2df(oa_snowball(   identifier = \"W1516819724\",   verbose = TRUE ))  flat_snow[, c(\"id\", \"connection\", \"connection_count\")] }"},{"path":"https://massimoaria.github.io/openalexR/reference/venues2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of venues' records from list format to data frame — venues2df","title":"Convert OpenAlex collection of venues' records from list format to data frame — venues2df","text":"converts bibliographic collection venues' records gathered OpenAlex database https://openalex.org/ data frame. function converts list venues' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/venues2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of venues' records from list format to data frame — venues2df","text":"","code":"venues2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/venues2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of venues' records from list format to data frame — venues2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information querying process. Default verbose = FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/venues2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of venues' records from list format to data frame — venues2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/venues2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of venues' records from list format to data frame — venues2df","text":"","code":"if (FALSE) {  # Query to search information about the Journal of Informetrics (OA id:V205292342)   query_inst <- oa_query(   identifier = \"V205292342\",   entity = \"venues\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"venues\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/works2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of works from list format to data frame — works2df","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"converts bibliographic collection works gathered OpenAlex database https://openalex.org/ data frame. function converts list works obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/works2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"","code":"works2df(data, abstract = TRUE, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/works2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"data List. Output oa_request. abstract Logical. TRUE, function returns also abstract item. Defaults TRUE. verbose Logical. TRUE, print information querying process. Default verbose = FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/works2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/works2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"works\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-development-version","dir":"Changelog","previous_headings":"","what":"openalexR (development version)","title":"openalexR (development version)","text":"Bug fixes","code":""},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-101","dir":"Changelog","previous_headings":"","what":"openalexR 1.0.1","title":"openalexR 1.0.1","text":"Improve snowball #9. Batch queries filter 50 values #18. Bug fixes. Added NEWS.md file track changes package.","code":""},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-100","dir":"Changelog","previous_headings":"","what":"openalexR 1.0.0","title":"openalexR 1.0.0","text":"CRAN release: 2022-10-06 Breaking change: now uses canonical way filter #7. Added website, hex. Added tests. Added R CMD CHECK GH Action Bug fixes. Added vignettes.","code":""},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-002","dir":"Changelog","previous_headings":"","what":"openalexR 0.0.2","title":"openalexR 0.0.2","text":"bug fixes","code":""},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-001","dir":"Changelog","previous_headings":"","what":"openalexR 0.0.1","title":"openalexR 0.0.1","text":"CRAN release: 2022-04-22 First CRAN release","code":""}]
