[{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"an-r-package-to-gather-bibliographic-data-from-openalex","dir":"Articles","previous_headings":"","what":"An R-package to gather bibliographic data from OpenAlex","title":"A Brief Introduction to openalexR","text":"openalexR helps interface OpenAlex API retrieve bibliographic infomation publications, authors, venues, institutions concepts 4 main functions: oa_query(): generates valid query, written following OpenAlex API syntax, set arguments provided user. oa_request(): downloads collection entities matching query created oa_query() manually written user, returns JSON object list format. oa2df(): converts JSON object classical bibliographic tibble/data frame. oa_fetch(): composes three functions user can execute everything one step, .e., oa_query |> oa_request |> oa2df oa_random(): get random entity, e.g., oa_random(\"works\") gives different work time run ","code":"library(openalexR) library(dplyr)"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"works-think-papers-publications","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Works (think papers, publications)","title":"A Brief Introduction to openalexR","text":"paper: associated OpenAlex-id W2755950973. know paper’s OpenAlex ID, need passing identifier = <openalex id> argument oa_fetch(): oa_fetch() composition functions: oa_query |> oa_request |> oa2df. results, oa_query() returns query string including OpenAlex endpoint API server address (default). oa_request() downloads bibliographic records matching query. Finally, oa2df() converts final result list tibble. final result complicated tibble, can use show_works() display simplified version:","code":"Aria, M., & Cuccurullo, C. (2017). bibliometrix:  An R-tool for comprehensive science mapping analysis.  Journal of informetrics, 11(4), 959-975. paper_id <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works/W2755950973 dplyr::glimpse(paper_id) ## Rows: 1 ## Columns: 26 ## $ id               <chr> \"https://openalex.org/W2755950973\" ## $ display_name     <chr> \"bibliometrix : An R-tool for comprehensive science m… ## $ author           <list> [<data.frame[2 x 10]>] ## $ ab               <chr> \"Abstract The use of bibliometrics is gradually exten… ## $ publication_date <chr> \"2017-11-01\" ## $ relevance_score  <lgl> NA ## $ so               <chr> \"Journal of Informetrics\" ## $ so_id            <chr> \"https://openalex.org/V205292342\" ## $ publisher        <chr> \"Elsevier\" ## $ issn             <list> <\"1875-5879\", \"1751-1577\"> ## $ url              <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" ## $ first_page       <chr> \"959\" ## $ last_page        <chr> \"975\" ## $ volume           <chr> \"11\" ## $ issue            <chr> \"4\" ## $ is_oa            <lgl> FALSE ## $ cited_by_count   <int> 1618 ## $ counts_by_year   <list> [<data.frame[6 x 2]>] ## $ publication_year <int> 2017 ## $ cited_by_api_url <chr> \"https://api.openalex.org/works?filter=cites:W275595… ## $ ids              <list> [<tbl_df[3 x 2]>] ## $ doi              <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" ## $ type             <chr> \"journal-article\" ## $ referenced_works <list> <\"https://openalex.org/W767067438\", \"https://openalex… ## $ related_works    <list> <\"https://openalex.org/W1513692756\", \"https://openale… ## $ concepts         <list> [<data.frame[3 x 5]>] paper_id %>%    show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"external-id-formats","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"External id formats","title":"A Brief Introduction to openalexR","text":"OpenAlex endpoint accepts OpenAlex IDs external IDs (e.g., DOI, ISSN) several formats, including Digital Object Identifier (DOI) Persistent Identifiers (PIDs).","code":"oa_fetch(   # identifier = \"https://doi.org/10.1016/j.joi.2017.08.007\", # would also work (PIDs)   identifier = \"doi:10.1016/j.joi.2017.08.007\",   entity = \"works\" ) %>%    show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"more-than-one-publicationsauthors","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"More than one publications/authors","title":"A Brief Introduction to openalexR","text":"https://api.openalex.org/authors/https://orcid.org/ know OpenAlex IDs entities, can also feed identifier argument. However, know external identifies, say, DOIs, need use doi filter (either canonical form https://doi.org/ without work):","code":"oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   # identifier = c(\"https://doi.org/10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1016/j.joi.2017.08.007\"), # TODO   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973 ## About to get a total of 1 pages of results with a total of 2 records. oa_fetch(   # identifier = c(\"W2741809807\", \"W2755950973\"),   doi = c(\"10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1093/bioinformatics/btab727\"),   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727 ## About to get a total of 1 pages of results with a total of 2 records."},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"filters","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"Filters","title":"A Brief Introduction to openalexR","text":"cases, interested downloading collection items meet one inclusion/exclusion criteria (filters). Supported attributes endpoints listed . Example: want download works published set authors. can filtering authorships.author.id/author.id authorships.author.orcid/author.orcid attribute (see attributes ): Example: want download works cited 50 times, published 2020 2021, include strings “bibliometric analysis” “science mapping” title. Maybe also want results sorted total citations descending order. Setting argument count_only = TRUE, function oa_request() returns number items matching query without downloading collection. can now download records transform tibble/data frame setting count_only = FALSE (also default value): Read see can shorten two function calls.","code":"oa_fetch(   entity = \"works\",   author.id = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE ) %>%    show_works() %>%    knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=author.id%3AA923435168%7CA2208157607 ## About to get a total of 1 pages of results with a total of 180 records. orcids <- c(\"0000-0003-3737-6565\", \"0000-0002-8517-9411\") canonical_orcids <- paste0(\"https://orcid.org/\", orcids) oa_fetch(   entity = \"works\",   author.orcid = canonical_orcids,   verbose = TRUE ) %>%    show_works() %>%    knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=author.orcid%3Ahttps%3A%2F%2Forcid.org%2F0000-0003-3737-6565%7Chttps%3A%2F%2Forcid.org%2F0000-0002-8517-9411 ## About to get a total of 2 pages of results with a total of 211 records. oa_fetch(   identifier = NULL,   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   sort = \"cited_by_count:desc\",   endpoint = \"https://api.openalex.org/\",   count_only = TRUE,   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc ##      count db_response_time_ms page per_page ## [1,]    33                  49    1        1 oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   sort = \"cited_by_count:desc\",   count_only = FALSE ) %>%   show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"authors","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Authors","title":"A Brief Introduction to openalexR","text":"Similarly work, can use identifier pass authors’ OpenAlex ID. Example: want information authors IDs A923435168 A2208157607. Example: want download authors’ records scholars work University Naples Federico II (OpenAlex ID: I71267560) published 499 works. Let’s first check many records match query, set count_only = FALSE download entire collection. can first defining list arguments, adding count_only (default FALSE) list: can also filter filters display_name, has_orcid, orcid:","code":"oa_fetch(   identifier = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE ) %>%   show_authors() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607 ## About to get a total of 1 pages of results with a total of 2 records. my_arguments <- list(   entity = \"authors\",   last_known_institution.id = \"I71267560\",   works_count = \">499\"   )  do.call(oa_fetch, c(my_arguments, list(count_only = TRUE))) ##      count db_response_time_ms page per_page ## [1,]    24                  45    1        1 do.call(oa_fetch, my_arguments) %>%    show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   display_name = \"Massimo Aria\",   has_orcid = \"true\" ) %>%   show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   orcid = \"0000-0002-8517-9411\" ) %>%   show_authors() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"institutions","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Institutions","title":"A Brief Introduction to openalexR","text":"Example: want download records regarding Italian institutions (country_code:) classified educational (type:education). , check many records match query download collection:","code":"italian_insts <- list(   entity = \"institutions\",   country_code = \"it\",   type = \"education\",   verbose = TRUE )  do.call(oa_fetch, c(italian_insts, list(count_only = TRUE))) ## Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation ##      count db_response_time_ms page per_page ## [1,]   231                  30    1        1 dplyr::glimpse(do.call(oa_fetch, italian_insts)) ## Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation ## About to get a total of 2 pages of results with a total of 231 records. ## Rows: 231 ## Columns: 22 ## $ id                        <chr> \"https://openalex.org/I861853513\", \"https://… ## $ display_name              <chr> \"Sapienza University of Rome\", \"University o… ## $ display_name_alternatives <list> \"Università degli Studi di Roma \\\"La Sapien… ## $ display_name_acronyms     <list> NA, \"UNIBO\", \"UNIPD\", \"UNIMI\", NA, NA, \"UNI… ## $ international             <list> [<data.frame[1 x 85]>], [<data.frame[1 x 10… ## $ ror                       <chr> \"https://ror.org/02be6w209\", \"https://ror.or… ## $ ids                       <list> [<tbl_df[6 x 2]>], [<tbl_df[6 x 2]>], [<tbl… ## $ country_code              <chr> \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"I… ## $ geo                       <list> [<data.frame[1 x 7]>], [<data.frame[1 x 7]>… ## $ type                      <chr> \"education\", \"education\", \"education\", \"educ… ## $ homepage_url              <chr> \"http://www.uniroma1.it/\", \"http://www.unibo… ## $ image_url                 <chr> \"https://upload.wikimedia.org/wikipedia/en/4… ## $ image_thumbnail_url       <chr> \"https://upload.wikimedia.org/wikipedia/en/t… ## $ associated_institutions   <list> [<data.frame[1 x 24]>], [<data.frame[1 x 12… ## $ relevance_score           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ works_count               <int> 164894, 131451, 130003, 128423, 92207, 87384… ## $ cited_by_count            <int> 10914663, 9871569, 9832758, 9287101, 6087369… ## $ counts_by_year            <list> [<data.frame[11 x 3]>], [<data.frame[11 x 3… ## $ works_api_url             <chr> \"https://api.openalex.org/works?filter=insti… ## $ x_concepts                <list> [<data.frame[14 x 5]>], [<data.frame[15 x 5… ## $ updated_date              <chr> \"2022-10-05T01:05:02.076899\", \"2022-10-04T16… ## $ created_date              <chr> \"2016-06-24\", \"2016-06-24\", \"2016-06-24\", \"2…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"venues-think-journals","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Venues (think journals)","title":"A Brief Introduction to openalexR","text":"Example: want download records regarding journals published 100,000 works:","code":"big_journals <- list(   entity = \"venues\",   works_count = \">100000\",   verbose = TRUE )  do.call(oa_fetch, c(big_journals, list(count_only = TRUE))) ## Requesting url: https://api.openalex.org/venues?filter=works_count%3A%3E100000 ##      count db_response_time_ms page per_page ## [1,]    51                  20    1        1 dplyr::glimpse(do.call(oa_fetch, big_journals)) ## Requesting url: https://api.openalex.org/venues?filter=works_count%3A%3E100000 ## About to get a total of 1 pages of results with a total of 51 records. ## Rows: 51 ## Columns: 15 ## $ id              <chr> \"https://openalex.org/V3121261024\", \"https://openalex.… ## $ display_name    <chr> \"Research Papers in Economics\", \"ChemInform\", \"Lecture… ## $ publisher       <chr> NA, \"Wiley\", NA, NA, \"Elsevier\", \"Social Science Elect… ## $ issn            <list> NA, <\"1431-5890\", \"0931-7597\", \"1522-2667\">, <\"1611-3… ## $ issn_l          <list> NA, \"0931-7597\", \"0302-9743\", NA, \"0140-6736\", \"1556-… ## $ is_oa           <lgl> NA, FALSE, FALSE, NA, FALSE, FALSE, FALSE, FALSE, FALS… ## $ is_in_doaj      <lgl> NA, FALSE, FALSE, NA, FALSE, FALSE, FALSE, FALSE, FALS… ## $ ids             <list> [<tbl_df[2 x 2]>], [<tbl_df[6 x 2]>], [<tbl_df[5 x 2]… ## $ homepage_url    <chr> \"http://www.repec.org/\", NA, \"http://www.springer.com/… ## $ relevance_score <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ works_count     <int> 746088, 721615, 520657, 483114, 476698, 458090, 433782… ## $ cited_by_count  <int> 1651873, 126388, 4958308, 1262634, 6961760, 1148952, 1… ## $ counts_by_year  <list> [<data.frame[11 x 3]>], [<data.frame[11 x 3]>], [<dat… ## $ x_concepts      <list> [<data.frame[22 x 5]>], [<data.frame[12 x 5]>], [<dat… ## $ works_api_url   <chr> \"https://api.openalex.org/works?filter=host_venue.id:V…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"concepts-think-theme-keywords","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Concepts (think theme, keywords)","title":"A Brief Introduction to openalexR","text":"Example: want download records concepts concern least one million works:","code":"popular_concepts <- list(   entity = \"concepts\",   works_count = \">1000000\",   verbose = TRUE )  do.call(oa_fetch, c(popular_concepts, list(count_only = TRUE))) ## Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 ##      count db_response_time_ms page per_page ## [1,]   148                   9    1        1 dplyr::glimpse(do.call(oa_fetch, popular_concepts)) ## Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 ## About to get a total of 1 pages of results with a total of 148 records. ## Rows: 148 ## Columns: 17 ## $ id                         <chr> \"https://openalex.org/C41008148\", \"https://… ## $ display_name               <chr> \"Computer science\", \"Medicine\", \"Chemistry\"… ## $ display_name_international <list> [<data.frame[1 x 185]>], [<data.frame[1 x … ## $ description                <chr> \"theoretical study of the formal foundation… ## $ description_international  <list> [<data.frame[1 x 40]>], [<data.frame[1 x 4… ## $ wikidata                   <chr> \"https://www.wikidata.org/wiki/Q21198\", \"ht… ## $ level                      <int> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0… ## $ ids                        <list> [<tbl_df[5 x 2]>], [<tbl_df[5 x 2]>], [<tb… ## $ image_url                  <chr> \"https://upload.wikimedia.org/wikipedia/com… ## $ image_thumbnail_url        <chr> \"https://upload.wikimedia.org/wikipedia/com… ## $ ancestors                  <list> NA, NA, NA, NA, NA, NA, NA, [<data.frame[2… ## $ related_concepts           <list> [<data.frame[93 x 5]>], [<data.frame[51 x … ## $ relevance_score            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ works_count                <int> 41363895, 37697170, 21071084, 17852796, 173… ## $ cited_by_count             <int> 223574731, 385441502, 340750996, 161070175,… ## $ counts_by_year             <list> [<data.frame[11 x 3]>], [<data.frame[11 x … ## $ works_api_url              <chr> \"https://api.openalex.org/works?filter=conc…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"other-examples","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Other examples","title":"A Brief Introduction to openalexR","text":"Get works citing particular work can download publications citing another publication using filter attribute cites. example, want download publications citing article Aria Cuccurullo (2017), just set argument filter cites = \"W2755950973\" “W2755950973” OA id article Aria Cuccurullo. query return collection NA publications. Among articles, let’s download ones published following year:","code":"aria_count <- oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   count_only = TRUE,   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973 aria_count ##      count db_response_time_ms page per_page ## [1,]  1683                  24    1        1 oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   publication_year = 2018,   count_only = FALSE,   verbose = TRUE ) %>%    dplyr::glimpse() ## Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973%2Cpublication_year%3A2018 ## About to get a total of 1 pages of results with a total of 16 records. ## Rows: 16 ## Columns: 26 ## $ id               <chr> \"https://openalex.org/W2902888572\", \"https://openalex… ## $ display_name     <chr> \"A global bibliometric analysis of Plesiomonas-relate… ## $ author           <list> [<data.frame[2 x 10]>], [<data.frame[7 x 10]>], [<da… ## $ ab               <chr> \"Plesiomonas shigelloides is an emerging pathogen wit… ## $ publication_date <chr> \"2018-11-29\", \"2018-04-01\", \"2018-06-25\", \"2018-09-27… ## $ relevance_score  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ so               <chr> \"PLOS ONE\", \"Journal of Experimental Zoology Part A: … ## $ so_id            <chr> \"https://openalex.org/V202381698\", \"https://openalex.… ## $ publisher        <chr> \"Public Library of Science\", \"Wiley\", \"Public Library… ## $ issn             <list> \"1932-6203\", <\"2471-5638\", \"2471-5646\">, \"1932-6203\"… ## $ url              <chr> \"https://doi.org/10.1371/journal.pone.0207655\", \"http… ## $ first_page       <chr> \"e0207655\", \"162\", \"e0199706\", \"10589\", \"3\", \"38\", \"e… ## $ last_page        <chr> \"e0207655\", \"176\", \"e0199706\", \"10604\", \"15\", \"38\", \"… ## $ volume           <chr> \"13\", \"329\", \"13\", \"101\", NA, \"4\", \"4\", \"9\", \"4\", NA,… ## $ issue            <chr> \"11\", \"4-5\", \"6\", \"12\", NA, \"3\", \"11\", NA, \"1\", NA, \"… ## $ is_oa            <lgl> TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRU… ## $ cited_by_count   <int> 65, 49, 49, 43, 34, 29, 16, 14, 8, 8, 7, 5, 4, 1, 0, 0 ## $ counts_by_year   <list> [<data.frame[4 x 2]>], [<data.frame[5 x 2]>], [<data.… ## $ publication_year <int> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018… ## $ cited_by_api_url <chr> \"https://api.openalex.org/works?filter=cites:W2902888… ## $ ids              <list> [<tbl_df[5 x 2]>], [<tbl_df[4 x 2]>], [<tbl_df[5 x 2]… ## $ doi              <chr> \"https://doi.org/10.1371/journal.pone.0207655\", \"htt… ## $ type             <chr> \"journal-article\", \"journal-article\", \"journal-articl… ## $ referenced_works <list> <\"https://openalex.org/W177697404\", \"https://openalex… ## $ related_works    <list> <\"https://openalex.org/W261917380\", \"https://openale… ## $ concepts         <list> [<data.frame[5 x 5]>], [<data.frame[10 x 5]>], [<dat…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"convert-an-openalex-data-frame-to-a-bibliometrix-object","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Convert an OpenAlex data frame to a bibliometrix object","title":"A Brief Introduction to openalexR","text":"bibliometrix R-package (https://www.bibliometrix.org) provides set tools quantitative research bibliometrics scientometrics. Today represents one used science mapping software world. recent survey bibliometric analysis tools, Moral-Muñoz et al. (2020) wrote: “moment, maybe Bibliometrix Shiny platform contain extensive set techniques implemented, together easiness interface, great software practitioners”. function oa2bibliometrix converts bibliographic data frame works bibliometrix object. object can used input collection science mapping workflow.","code":"bib_ls <- list(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2022-01-01\",   to_publication_date = \"2022-03-31\" )  do.call(oa_fetch, c(bib_ls, list(count_only = TRUE))) ##      count db_response_time_ms page per_page ## [1,]   239                  20    1        1 do.call(oa_fetch, bib_ls) %>%    oa2bibliometrix() %>%    dplyr::glimpse() ## Rows: 239 ## Columns: 39 ## $ AU               <chr> \"ZHIQUAN LIU;CHRISTOPHER R. MALINOWSKI;MARIA S. SEPÚL… ## $ RP               <chr> \"DEPARTMENT OF FORESTRY AND NATURAL RESOURCES, PURDUE… ## $ C1               <chr> \"DEPARTMENT OF FORESTRY AND NATURAL RESOURCES, PURDUE… ## $ AU_UN            <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"… ## $ AU_CO            <chr> \"USA;USA;USA\", \"ITALY;ITALY;MALAYSIA\", \"CHINA;CHINA;C… ## $ ID               <chr> \"ORGANISM;DAPHNIA;NANOTOXICOLOGY;DAPHNIA MAGNA;ECOTOX… ## $ id_url           <chr> \"https://openalex.org/W3212020496\", \"https://openalex… ## $ author           <list> [<data.frame[3 x 10]>], [<data.frame[3 x 10]>], [<da… ## $ publication_date <chr> \"2022-03-01\", \"2022-01-10\", \"2022-01-01\", \"2022-03-08… ## $ relevance_score  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ so_id            <chr> \"https://openalex.org/V203465130\", \"https://openalex.… ## $ publisher        <chr> \"Elsevier\", \"Emerald (MCB UP)\", \"Elsevier\", \"Wiley\", … ## $ issn             <list> <\"0045-6535\", \"1879-1298\">, <\"0007-070X\", \"1758-4108… ## $ url              <chr> \"https://doi.org/10.1016/j.chemosphere.2021.132941\", … ## $ first_page       <chr> \"132941\", \"2239\", \"111780\", \"1129\", \"113925\", NA, \"25… ## $ last_page        <chr> \"132941\", \"2261\", \"111780\", \"1155\", \"113925\", NA, \"25… ## $ volume           <chr> \"291\", \"124\", \"153\", \"39\", \"301\", NA, \"19\", \"292\", \"1… ## $ issue            <chr> NA, \"7\", NA, \"6\", NA, NA, \"5\", NA, NA, NA, NA, NA, NA… ## $ is_oa            <lgl> FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE,… ## $ counts_by_year   <list> [<data.frame[1 x 2]>], [<data.frame[1 x 2]>], [<data… ## $ cited_by_api_url <chr> \"https://api.openalex.org/works?filter=cites:W3212020… ## $ ids              <list> [<tbl_df[4 x 2]>], [<tbl_df[2 x 2]>], [<tbl_df[3 x 2… ## $ doi              <chr> \"https://doi.org/10.1016/j.chemosphere.2021.132941\", … ## $ referenced_works <list> <\"https://openalex.org/W321855510\", \"https://openale… ## $ related_works    <list> <\"https://openalex.org/W2040538662\", \"https://openal… ## $ concepts         <list> [<data.frame[13 x 5]>], [<data.frame[14 x 5]>], [<da… ## $ id_oa            <chr> \"W3212020496\", \"W4205146162\", \"W3208801174\", \"W422099… ## $ CR               <chr> \"https://openalex.org/W321855510;https://openalex.org… ## $ TI               <chr> \"EMERGING TRENDS IN NANOPARTICLE TOXICITY AND THE SIG… ## $ AB               <chr> \"NANOPARTICLE PRODUCTION IS ON THE RISE DUE TO ITS MA… ## $ SO               <chr> \"CHEMOSPHERE\", \"BRITISH FOOD JOURNAL\", \"RENEWABLE & S… ## $ DT               <chr> \"JOURNAL-ARTICLE\", \"JOURNAL-ARTICLE\", \"JOURNAL-ARTICL… ## $ DB               <chr> \"openalex\", \"openalex\", \"openalex\", \"openalex\", \"open… ## $ JI               <chr> \"V203465130\", \"V99313352\", \"V68497187\", \"V102896891\",… ## $ J9               <chr> \"V203465130\", \"V99313352\", \"V68497187\", \"V102896891\",… ## $ PY               <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,… ## $ TC               <int> 9, 9, 8, 8, 7, 7, 7, 6, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4,… ## $ SR_FULL          <chr> \"ZHIQUAN LIU, 2022, CHEMOSPHERE\", \"PAOLO BIANCONE, 20… ## $ SR               <chr> \"ZHIQUAN LIU, 2022, CHEMOSPHERE\", \"PAOLO BIANCONE, 20…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"about-openalex","dir":"Articles","previous_headings":"","what":"About OpenAlex","title":"A Brief Introduction to openalexR","text":"oar-img Schema credits: @dhimmel OpenAlex fully open catalog global research system. ’s named ancient Library Alexandria. OpenAlex dataset describes scholarly entities entities connected . five types entities: Works papers, books, datasets, etc; cite works Authors people create works Venues journals repositories host works Institutions universities orgs affiliated works (via authors) Concepts tag Works topic","code":""},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"acknowledgements","dir":"Articles","previous_headings":"About OpenAlex","what":"Acknowledgements","title":"A Brief Introduction to openalexR","text":"Package hex made Midjourney thus inherits CC -NC 4.0 license.","code":""},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"example-1-institutions","dir":"Articles","previous_headings":"","what":"Example 1: institutions","title":"About the tibble output","text":"Suppose queried Open Alex obtain information large Canadian institutions now want extract latitudes longitudes. present three different approaches .","code":"institutions <- oa_fetch(   entity = \"institutions\",   country_code = \"CA\",   cited_by_count = \">4000000\",   verbose = TRUE,   count_only = FALSE ) #> Requesting url: https://api.openalex.org/institutions?filter=country_code%3ACA%2Ccited_by_count%3A%3E4000000 #> About to get a total of 1 pages of results with a total of 11 records.  head(institutions) #> # A tibble: 6 × 22 #>   id          displ…¹ displ…² displ…³ inter…⁴ ror   ids      count…⁵ geo   type  #>   <chr>       <chr>   <list>  <list>  <list>  <chr> <list>   <chr>   <lis> <chr> #> 1 https://op… Univer… <lgl>   <lgl>   <df>    http… <tibble> CA      <df>  educ… #> 2 https://op… Univer… <lgl>   <chr>   <df>    http… <tibble> CA      <df>  educ… #> 3 https://op… Univer… <chr>   <lgl>   <df>    http… <tibble> CA      <df>  educ… #> 4 https://op… McGill… <lgl>   <lgl>   <df>    http… <tibble> CA      <df>  educ… #> 5 https://op… Univer… <lgl>   <chr>   <df>    http… <tibble> CA      <df>  educ… #> 6 https://op… Univer… <chr>   <chr>   <df>    http… <tibble> CA      <df>  educ… #> # … with 12 more variables: homepage_url <chr>, image_url <chr>, #> #   image_thumbnail_url <chr>, associated_institutions <list>, #> #   relevance_score <lgl>, works_count <int>, cited_by_count <int>, #> #   counts_by_year <list>, works_api_url <chr>, x_concepts <list>, #> #   updated_date <chr>, created_date <chr>, and abbreviated variable names #> #   ¹​display_name, ²​display_name_alternatives, ³​display_name_acronyms, #> #   ⁴​international, ⁵​country_code"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"dplyrrowwise","dir":"Articles","previous_headings":"Example 1: institutions","what":"dplyr::rowwise","title":"About the tibble output","text":"use rowwise used discouraged, tidyverse team now recognized importance many workflows, rowwise stay. think rowwise pairs naturally list columns output.","code":"institutions %>%   rowwise() %>%   mutate(     name = display_name,     openalex_id = stringr::str_extract(id, \"I\\\\d+\"),     lat = geo$latitude,     lon = geo$longitude,     .keep = \"none\"   ) #> # A tibble: 11 × 4 #> # Rowwise:  #>    name                           openalex_id   lat    lon #>    <chr>                          <chr>       <dbl>  <dbl> #>  1 University of Toronto          I185261750   43.7  -79.4 #>  2 University of British Columbia I141945490   49.3 -123.  #>  3 University of Alberta          I154425047   53.5 -114.  #>  4 McGill University              I5023651     45.5  -73.6 #>  5 University of Calgary          I168635309   51.1 -114.  #>  6 University of Waterloo         I151746483   43.5  -80.5 #>  7 Western University             I125749732   43.0  -81.3 #>  8 University of Ottawa           I153718931   45.4  -75.7 #>  9 University of Montreal         I70931966    45.5  -73.6 #> 10 McMaster University            I98251732    43.3  -79.9 #> 11 Université Laval               I43406934    46.8  -71.3"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"purrrmap","dir":"Articles","previous_headings":"Example 1: institutions","what":"purrr::map","title":"About the tibble output","text":"Alternatively, can use function purrr::map family. can see , syntax little less natural, may gain performance advantage really large dataframe.","code":"institutions %>%   mutate(     name = display_name,     openalex_id = stringr::str_extract(id, \"I\\\\d+\"),     lat = purrr::map_dbl(geo, ~ .x$latitude),     lon = purrr::map_dbl(geo, ~ .x$longitude),     .keep = \"none\"   ) #> # A tibble: 11 × 4 #>    name                           openalex_id   lat    lon #>    <chr>                          <chr>       <dbl>  <dbl> #>  1 University of Toronto          I185261750   43.7  -79.4 #>  2 University of British Columbia I141945490   49.3 -123.  #>  3 University of Alberta          I154425047   53.5 -114.  #>  4 McGill University              I5023651     45.5  -73.6 #>  5 University of Calgary          I168635309   51.1 -114.  #>  6 University of Waterloo         I151746483   43.5  -80.5 #>  7 Western University             I125749732   43.0  -81.3 #>  8 University of Ottawa           I153718931   45.4  -75.7 #>  9 University of Montreal         I70931966    45.5  -73.6 #> 10 McMaster University            I98251732    43.3  -79.9 #> 11 Université Laval               I43406934    46.8  -71.3"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"baselapply","dir":"Articles","previous_headings":"Example 1: institutions","what":"base::lapply","title":"About the tibble output","text":"Similar purrr approach, can use base functions lapply family, example:","code":"institutions %>%   mutate(     name = display_name,     openalex_id = stringr::str_extract(id, \"I\\\\d+\"),     lat = sapply(geo, function(x) x$latitude),     lon = sapply(geo, function(x) x$longitude),     .keep = \"none\"   ) #> # A tibble: 11 × 4 #>    name                           openalex_id   lat    lon #>    <chr>                          <chr>       <dbl>  <dbl> #>  1 University of Toronto          I185261750   43.7  -79.4 #>  2 University of British Columbia I141945490   49.3 -123.  #>  3 University of Alberta          I154425047   53.5 -114.  #>  4 McGill University              I5023651     45.5  -73.6 #>  5 University of Calgary          I168635309   51.1 -114.  #>  6 University of Waterloo         I151746483   43.5  -80.5 #>  7 Western University             I125749732   43.0  -81.3 #>  8 University of Ottawa           I153718931   45.4  -75.7 #>  9 University of Montreal         I70931966    45.5  -73.6 #> 10 McMaster University            I98251732    43.3  -79.9 #> 11 Université Laval               I43406934    46.8  -71.3"},{"path":"https://massimoaria.github.io/openalexR/articles/About-the-tibble-output.html","id":"example-2-works","dir":"Articles","previous_headings":"","what":"Example 2: works","title":"About the tibble output","text":"Suppose tibble works output like find institutions corresponding works’ authors. case, work may one affiliated institutions. store result list column:","code":"works <- oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">100\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-01-31\",   sort = \"cited_by_count:desc\",   count_only = FALSE )  multi_insts <- works %>%    rowwise() %>%    mutate(     openalex_id = stringr::str_extract(id, \"W\\\\d+\"),     institutions = list(unique(author$institution_display_name)),     .keep = \"none\"   )  multi_insts #> # A tibble: 6 × 2 #> # Rowwise:  #>   openalex_id institutions #>   <chr>       <list>       #> 1 W3038273726 <chr [2]>    #> 2 W2990450011 <chr [2]>    #> 3 W3001491100 <chr [2]>    #> 4 W3011866596 <chr [1]>    #> 5 W3044902155 <chr [1]>    #> 6 W3000910650 <chr [3]>  # institutions of the first work multi_insts[1, \"institutions\"][[1]] #> [[1]] #> [1] \"University of Southern Denmark\" \"BI Norwegian Business School\""},{"path":"https://massimoaria.github.io/openalexR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Massimo Aria. Author, maintainer, copyright holder. Trang Le. Author.","code":""},{"path":"https://massimoaria.github.io/openalexR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aria M, Le T (2022). openalexR: Getting Bibliographic Records 'OpenAlex' Database Using 'DSL' API. https://github.com/massimoaria/openalexR, https://massimoaria.github.io/openalexR/.","code":"@Manual{,   title = {openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API},   author = {Massimo Aria and Trang Le},   year = {2022},   note = {https://github.com/massimoaria/openalexR, https://massimoaria.github.io/openalexR/}, }"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"openalexr-","dir":"","previous_headings":"","what":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"openalexR helps interface OpenAlex API retrieve bibliographic infomation publications, authors, venues, institutions concepts 5 main functions: oa_fetch(): composes three functions user can execute everything one step, .e., oa_query |> oa_request |> oa2df oa_query(): generates valid query, written following OpenAlex API syntax, set arguments provided user. oa_request(): downloads collection entities matching query created oa_query() manually written user, returns JSON object list format. oa2df(): converts JSON object classical bibliographic tibble/data frame. oa_random(): get random entity, e.g., oa_random(\"works\") gives different work time run ","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"can install developer version openalexR GitHub : can install released version openalexR CRAN : go , highly recommend set openalexR.mailto option requests go polite pool faster response times: Bonus point put .Rprofile file.edit(\"~/.Rprofile\").","code":"install.packages(\"remotes\") remotes::install_github(\"massimoaria/openalexR\") install.packages(\"openalexR\") options(openalexR.mailto = \"example@email.com\") library(openalexR) library(dplyr) library(ggplot2) theme_set(theme_classic())"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"different filters/arguments can use oa_fetch, depending entity ’re interested : works, authors, venues, institutions, concepts. show examples .","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"works","dir":"","previous_headings":"Examples","what":"Works","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Goal: Download information givens set publications (known DOIs). Use doi works filter (either canonical form https://doi.org/ without): Goal: Download works published set authors (known ORCIDs). Use author.orcid filter (now, need provide canonical form https://orcid.org/): Goal: Download works cited 50 times, published 2020 2021, include strings “bibliometric analysis” “science mapping” title. Maybe also want results sorted total citations descending order.","code":"oa_fetch(   doi = c(\"10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1093/bioinformatics/btab727\"),   entity = \"works\",   verbose = TRUE ) %>%   show_works() %>%   knitr::kable() #> Requesting url: https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727 #> About to get a total of 1 pages of results with a total of 2 records. orcids <- c(\"0000-0003-3737-6565\", \"0000-0002-8517-9411\") canonical_orcids <- paste0(\"https://orcid.org/\", orcids) oa_fetch(   entity = \"works\",   author.orcid = canonical_orcids,   verbose = TRUE ) %>%   show_works() %>%   knitr::kable() #> Requesting url: https://api.openalex.org/works?filter=author.orcid%3Ahttps%3A%2F%2Forcid.org%2F0000-0003-3737-6565%7Chttps%3A%2F%2Forcid.org%2F0000-0002-8517-9411 #> About to get a total of 2 pages of results with a total of 211 records. oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   sort = \"cited_by_count:desc\",   verbose = TRUE ) %>%   show_works() %>%   knitr::kable() #> Requesting url: https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc #> About to get a total of 1 pages of results with a total of 33 records."},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"authors","dir":"","previous_headings":"Examples","what":"Authors","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Goal: Download author information know ORCID. , instead author.orcid like earlier, use orcid argument. may little confusing, , different entity (authors instead works) requires different set filters. Goal: Acquire information authors package. can filter filters display_name has_orcid: Goal: Download authors’ records scholars work University Naples Federico II (OpenAlex ID: I71267560) published least 500 publications. Let’s first check many records match query, download entire collection. can first defining list arguments, adding count_only (default FALSE) list:","code":"oa_fetch(   entity = \"authors\",   orcid = c(\"0000-0003-3737-6565\", \"0000-0002-8517-9411\") ) %>%   show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   display_name = c(\"Massimo Aria\", \"Trang T. Le\"),   has_orcid = TRUE ) %>%   show_authors() %>%   knitr::kable() my_arguments <- list(   entity = \"authors\",   last_known_institution.id = \"I71267560\",   works_count = \">499\" )  do.call(oa_fetch, c(my_arguments, list(count_only = TRUE))) #>      count db_response_time_ms page per_page #> [1,]    24                  17    1        1 do.call(oa_fetch, my_arguments) %>%   show_authors() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"example-analyses","dir":"","previous_headings":"","what":"Example analyses","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Goal: track popularity Biology concepts time. first download records level-1 concepts/keywords concern one million works:  Goal: Rank institutions Italy total number citations. want download records regarding Italian institutions (country_code:) classified educational (type:education). , check many records match query download collection:  publish ?  Goal: Visualize big journals’ topics. first download records regarding journals published 300,000 works, visualize scored concepts:","code":"library(gghighlight) concept_df <- oa_fetch(   entity = \"concepts\",   level = 1,   ancestors.id = \"https://openalex.org/C86803240\", # Biology   works_count = \">1000000\" )  concept_df %>%   select(display_name, counts_by_year) %>%   tidyr::unnest(counts_by_year) %>%   filter(year < 2022) %>%   ggplot() +   aes(x = year, y = works_count, color = display_name) +   facet_wrap(~display_name) +   geom_line(size = 0.7) +   scale_color_brewer(palette = \"Dark2\") +   labs(     x = NULL, y = \"Works count\",     title = \"We know what happened in 2020\"   ) +   guides(color = \"none\") +   gghighlight(max(works_count) > 99500) #> label_key: display_name italy_insts <- oa_fetch(   entity = \"institutions\",   country_code = \"it\",   type = \"education\",   verbose = TRUE ) #> Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation #> About to get a total of 2 pages of results with a total of 231 records.  italy_insts %>%   slice_max(cited_by_count, n = 8) %>%   mutate(display_name = forcats::fct_reorder(display_name, cited_by_count)) %>%   ggplot() +   aes(x = cited_by_count, y = display_name, fill = display_name) +   geom_col() +   scale_fill_viridis_d(option = \"E\") +   guides(fill = \"none\") +   labs(     x = \"Total citations\", y = NULL,     title = \"Italian references\"   ) +   coord_cartesian(expand = FALSE) concept_cloud <- italy_insts %>%    select(inst_id = id, x_concepts) %>%    tidyr::unnest(x_concepts) %>%    filter(level == 1) %>%    select(display_name, score) %>%    group_by(display_name) %>%    summarise(score = sum(score))  pal <- c(\"black\", scales::brewer_pal(palette = \"Set1\")(5)) set.seed(1) wordcloud::wordcloud(   concept_cloud$display_name,    concept_cloud$score,   scale = c(2, .4),   colors = pal ) jours <- oa_fetch(   entity = \"venues\",   works_count = \">300000\",   verbose = TRUE ) %>%   distinct(display_name, .keep_all = TRUE) %>%   select(jour = display_name, x_concepts) %>%   tidyr::unnest(x_concepts) %>%   filter(level == 0) %>%   left_join(concept_abbrev) %>%   mutate(abbreviation = gsub(\" \", \"<br>\", abbreviation)) %>%   tidyr::complete(jour, abbreviation, fill = list(score = 0)) %>%   group_by(jour) %>%   mutate(     color = if_else(score > 10, \"#1A1A1A\", \"#D9D9D9\"), # CCCCCC     label = paste0(\"<span style='color:\", color, \"'>\", abbreviation, \"<\/span>\")   )  jours %>%   ggplot() +   aes(fill = jour, y = score, x = abbreviation, group = jour) +   facet_wrap(~jour) +   geom_hline(yintercept = c(45, 90), colour = \"grey90\", size = 0.2) +   geom_segment(     aes(x = abbreviation, xend = abbreviation, y = 0, yend = 100),     color = \"grey95\"   ) +   geom_col(color = \"grey20\") +   coord_polar(clip = \"off\") +   theme_bw() +   theme(     panel.grid = element_blank(),     panel.border = element_blank(),     axis.text = element_blank(),     axis.ticks.y = element_blank()   ) +   ggtext::geom_richtext(     aes(y = 120, label = label),     fill = NA, label.color = NA, size = 3   ) +   scale_fill_brewer(palette = \"Set1\") +   guides(fill = \"none\") +   labs(y = NULL, x = NULL, title = \"Journal clocks\")"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"snowball-search","dir":"","previous_headings":"","what":"Snowball search","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"TODO","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"about-openalex","dir":"","previous_headings":"","what":"About OpenAlex","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"oar-img Schema credits: @dhimmel OpenAlex fully open catalog global research system. ’s named ancient Library Alexandria. OpenAlex dataset describes scholarly entities entities connected . five types entities: Works papers, books, datasets, etc; cite works Authors people create works Venues journals repositories host works Institutions universities orgs affiliated works (via authors) Concepts tag Works topic","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Package hex made Midjourney thus inherits CC -NC 4.0 license.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/concept_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"Concepts and abbreviations. — concept_abbrev","title":"Concepts and abbreviations. — concept_abbrev","text":"0-level concepts corresponding abbreviations.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/concept_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concepts and abbreviations. — concept_abbrev","text":"","code":"concept_abbrev"},{"path":"https://massimoaria.github.io/openalexR/reference/concept_abbrev.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Concepts and abbreviations. — concept_abbrev","text":"data frame 19 observations 3 variables: id, display_name, abbreviation.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/countrycode.html","id":null,"dir":"Reference","previous_headings":"","what":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"Data frame contains list countries alpha-2 aplha-3 codes.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/countrycode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"data frame 250 rows 3 variables: Country country names Alpha2 countries' alpha-2 codes Alpha3 countries' alpha-3 codes","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"converts bibliographic collections gathered OpenAlex database https://openalex.org/ bibliometrix data frame (https://bibliometrix.org/)","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"","code":"oa2bibliometrix(df)"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"df bibliographic collection works donwloaded OpenALex.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"data.frame class \"bibliometrix\".","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"works\")  M <- oa2bibliometrix(df) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection from list to data frame — oa2df","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"converts bibliographic collections gathered OpenAlex database https://openalex.org/ data frame. function converts collection records works, authors, institutions, venues concepts obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"","code":"oa2df(   data,   entity,   abstract = TRUE,   count_only = FALSE,   group_by = NULL,   verbose = TRUE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"data list. data output function oa_request. entity character. indicates scholarly entity search. argument can equal entity = c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). default value entity = works\". abstract Logical. TRUE, function returns also abstract item. Default abstract=TRUE. argument ignored entity different \"works\". count_only Logical. TRUE, function returns number item matching query. Default count_only=FALSE. group_by Character. Property group . example: \"oa_status\" works. https://docs.openalex.org/api/get-groups--entities verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-04-30\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  oa2df(res, entity = \"works\")  }"},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"converts bibliographic collection authors' records gathered OpenAlex database https://openalex.org/ data frame. function converts list authors' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"","code":"oaAuthors2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"","code":"if (FALSE) {  # Query to search information about all authors affiliated to the University of Naples Federico II # which have authored at least 100 publications:  # University of Naples Federico II is associated to the OpenAlex id I71267560.   query_author <- oa_query(   identifier = NULL,   entity = \"authors\",   last_known_institution.id = \"I71267560\",   works_count = \">99\" )  res <- oa_request(   query_url = query_author,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"authors\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"converts bibliographic collection concepts' records gathered OpenAlex database https://openalex.org/ data frame. function converts list concepts' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"","code":"oaConcepts2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"","code":"if (FALSE) {  # Query to search information about all Italian educational institutions   query_inst <- oa_query(   entity = \"concepts\",   display_name.search = \"electrodynamics\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"concepts\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"converts bibliographic collection institutions' records gathered OpenAlex database https://openalex.org/ data frame. function converts list institutions' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"","code":"oaInstitutions2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"","code":"if (FALSE) {  # Query to search information about all Italian educational institutions  query_inst <- oa_query(   entity = \"institutions\",   country_code = \"it\",   type = \"education\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  oa2df(res, entity = \"institutions\") }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"converts bibliographic collection venues' records gathered OpenAlex database https://openalex.org/ data frame. function converts list venues' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"","code":"oaVenues2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"","code":"if (FALSE) {  # Query to search information about the Journal of Informetrics (OA id:V205292342)   query_inst <- oa_query(   identifier = \"V205292342\",   entity = \"venues\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"venues\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"converts bibliographic collection works gathered OpenAlex database https://openalex.org/ data frame. function converts list works obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"","code":"oaWorks2df(data, abstract = TRUE, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"data list. data output function oa_request. abstract Logical. TRUE, function returns also abstract item. Default abstract=TRUE. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"works\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":null,"dir":"Reference","previous_headings":"","what":"Available entities in the OpenAlex database — oa_entities","title":"Available entities in the OpenAlex database — oa_entities","text":"Available entities OpenAlex database","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available entities in the OpenAlex database — oa_entities","text":"","code":"oa_entities()"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available entities in the OpenAlex database — oa_entities","text":"Character vector 5 entity options.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"composition function perform query building, requesting, convert result tibble/data frame.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"","code":"oa_fetch(   ...,   identifier = NULL,   entity = if (is.null(identifier)) NULL else id_type(identifier[[1]]),   search = NULL,   sort = NULL,   group_by = NULL,   output = c(\"tibble\", \"dataframe\", \"list\"),   abstract = TRUE,   endpoint = \"https://api.openalex.org/\",   per_page = 200,   count_only = FALSE,   mailto = oa_email(),   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"... Additional filter arguments. identifier Character. indicates item identifier. entity Character. indicates scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). provided, `entity` guessed `identifier`. search Character. Search just another kind filter, one five endpoints support. unlike filters, search require exact match. filter using search, append .search end property filtering . sort Character. Property sort . example: \"display_name\" venues \"cited_by_count:desc\" works. See <https://docs.openalex.org/api/get-lists--entities/sort-entity-lists>. group_by Character. Property group . example: \"oa_status\" works. https://docs.openalex.org/api/get-groups--entities output Character. Type output, either list tibble/data.frame. abstract Logical. TRUE, function returns also abstract item. Default abstract = TRUE. argument ignored entity different \"works\". endpoint character. indicates url OpenAlex Endpoint API server. default value endpoint = \"https://api.openalex.org/\". per_page numeric. indicates many items download per page. per-page argument can assume number 1 200. Default per_page=200. count_only logical. TRUE, function returns number item matching query. Default count_only=FALSE. mailto character. get polite pool, arguments mailto give OpenAlex email can contact . verbose logical. TRUE, information querying process plotted screen. Default verbose=FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"data.frame list. Result query.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"","code":"if (FALSE) {  paper_meta <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   endpoint = \"https://api.openalex.org/\",   count_only = TRUE,   abstract = TRUE,   verbose = TRUE )  oa_fetch(   entity = \"works\",   doi = c(     \"10.1371/journal.pone.0266781\",     \"10.1371/journal.pone.0267149\"   ),   verbose = TRUE,   count_only = TRUE )  oa_fetch(   entity = \"works\",   doi = c(     \"10.1371/journal.pone.0266781\",     \"10.1371/journal.pone.0267149\"   ),   verbose = TRUE )  oa_fetch( identifier = c(\"A923435168\", \"A2208157607\"), verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an OpenAlex query from a set of parameters — oa_query","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"generates valid query, written following OpenAlex API Language, set parameters.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"","code":"oa_query(   filter = NULL,   multiple_id = FALSE,   identifier = NULL,   entity = if (is.null(entity)) id_type(identifier[[1]]),   search = NULL,   sort = NULL,   group_by = NULL,   endpoint = \"https://api.openalex.org/\",   verbose = FALSE,   ... )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"filter Character string. Filters narrow list just entities meet particular condition--specifically, particular value particular attribute. Filters formatted attribute = value. complete list filter attributes entity can found https://docs.openalex.org/api/get-lists--entities#filter example, `cited_by_count = \">100\"`, `title.search = c(\"bibliometric analysis\", \"science mapping\")`, `to_publication_date = \"2021-12-31\"`. multiple_id Logical. Whether multiple identifiers. identifier Character. indicates item identifier. entity Character. indicates scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). provided, `entity` guessed `identifier`. search Character. Search just another kind filter, one five endpoints support. unlike filters, search require exact match. filter using search, append .search end property filtering . sort Character. Property sort . example: \"display_name\" venues \"cited_by_count:desc\" works. See <https://docs.openalex.org/api/get-lists--entities/sort-entity-lists>. group_by Character. Property group . example: \"oa_status\" works. https://docs.openalex.org/api/get-groups--entities endpoint character. indicates url OpenAlex Endpoint API server. default value endpoint = \"https://api.openalex.org/\". verbose logical. TRUE, information querying process plotted screen. Default verbose=FALSE. ... Additional filter arguments.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"character containing query OpenAlex format. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"","code":"if (FALSE) {  query_auth <- oa_query(identifier = \"A923435168\", verbose = TRUE)  ### EXAMPLE 1: Full record about an entity.  # Query to obtain allinformation about a particular work/author/institution/etc.:  #  The following paper is associated to the OpenAlex-id W2755950973.  #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  query_work <- oa_query(   identifier = \"W2755950973\",   endpoint = \"https://api.openalex.org/\",   verbose = TRUE )   #  The author Massimo Aria is associated to the OpenAlex-id A923435168:  query_auth <- oa_query(identifier = \"A923435168\", verbose = TRUE)   ### EXAMPLE 2: all works citing a particular work.  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query1 <- oa_query(   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   verbose = TRUE )  ### EXAMPLE 3: All works matching a string in their title  # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in the first half of 2021.  # Results have to be sorted by relevance score in a descending order.  query2 <- oa_query(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-06-30\",   sort = \"cited_by_count:desc\",   verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":null,"dir":"Reference","previous_headings":"","what":"oa_fetch but for a random query — oa_random","title":"oa_fetch but for a random query — oa_random","text":"oa_fetch random query","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"oa_fetch but for a random query — oa_random","text":"","code":"oa_random(   entity = oa_entities(),   output = c(\"tibble\", \"dataframe\", \"list\"),   endpoint = \"https://api.openalex.org/\" )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"oa_fetch but for a random query — oa_random","text":"entity Character. indicates scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). provided, `entity` guessed `identifier`. output Character. Type output, either list tibble/data.frame. endpoint character. indicates url OpenAlex Endpoint API server. default value endpoint = \"https://api.openalex.org/\".","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"oa_fetch but for a random query — oa_random","text":"data.frame list. One row one element. Result random query.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"oa_fetch but for a random query — oa_random","text":"","code":"oa_random() #> # A tibble: 1 × 26 #>   id        displ…¹ author ab    publi…² relev…³ so    so_id publi…⁴ issn  url   #>   <chr>     <chr>   <list> <chr> <chr>   <lgl>   <chr> <chr> <chr>   <lis> <chr> #> 1 https://… Patter… <df>   Abst… 1985-1… NA      Agri… http… Elsevi… <chr> http… #> # … with 15 more variables: first_page <chr>, last_page <chr>, volume <chr>, #> #   issue <chr>, is_oa <lgl>, cited_by_count <int>, counts_by_year <list>, #> #   publication_year <int>, cited_by_api_url <chr>, ids <list>, doi <chr>, #> #   type <chr>, referenced_works <list>, related_works <list>, concepts <list>, #> #   and abbreviated variable names ¹​display_name, ²​publication_date, #> #   ³​relevance_score, ⁴​publisher"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bibliographic records from OpenAlex databases — oa_request","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"gets bibliographic records OpenAlex database https://openalex.org/. function oa_request queries OpenAlex database using query formulated function oa_query.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"","code":"oa_request(   query_url,   per_page = 200,   count_only = FALSE,   mailto = oa_email(),   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"query_url character. contains search query formulated using OpenAlex API language. query can automatically generated using function oa_query. per_page numeric. indicates many items download per page. per-page argument can assume number 1 200. Default per_page=200. count_only logical. TRUE, function returns number item matching query. Default count_only=FALSE. mailto character. get polite pool, arguments mailto give OpenAlex email can contact . verbose logical. TRUE, information querying process plotted screen. Default verbose=FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"data.frame list. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"","code":"if (FALSE) {  ### EXAMPLE 1: Full record about an entity.  # Query to obtain all information about a particular work/author/institution/etc.:  #  The following paper is associated to the OpenAlex-id W2755950973.  #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.   query_work <- oa_query(   identifier = \"W2755950973\",   entity = \"works\",   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query_work,   count_only = FALSE,   verbose = FALSE )  #  The author Massimo Aria is associated to the OpenAlex-id A923435168.   query_author <- oa_query(   identifier = \"A923435168\",   entity = \"authors\",   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query_author,   count_only = FALSE,   verbose = FALSE )    ### EXAMPLE 2: all works citing a particular work.  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query2 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = \"cites:W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res2 <- oa_request(   query_url = query2,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 3: All works matching a string in their title  # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in 2020 or 2021.  # Results have to be sorted by relevance score in a descending order.   query3 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = 'title.search:\"bibliometric analysis\"|\"science mapping\"',   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res3 <- oa_request(   query_url = query3,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 4: How to check how many works match a query # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in 2020 or 2021.  # Query only to know how many works could be retrieved (count_only=TRUE)  query4 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = 'title.search:\"bibliometric analysis\"|\"science mapping\"',   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res4 <- oa_request(   query_url = query4,   count_only = TRUE,   verbose = FALSE )  res4$count # number of items retrieved by our query }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"function perform snowball search convert result tibble/data frame.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"","code":"oa_snowball(   identifier = NULL,   output = c(\"tibble\", \"dataframe\"),   mailto = oa_email(),   endpoint = \"https://api.openalex.org/\",   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"identifier Character. indicates vector openalex_id identifiers. output tibble/data.frame. mailto character. get polite pool, arguments mailto give OpenAlex email can contact . endpoint character. indicates url OpenAlex Endpoint API server. default value endpoint = \"https://api.openalex.org/\". verbose logical. TRUE, information querying process plotted screen. Default verbose=FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"list containing 2 objects: relationship links among documents (-> ); data frame publication records.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"","code":"if (FALSE) {  snowball_docs <- oa_snowball(   identifier = c(\"W2741809807\", \"W2755950973\"),   endpoint = \"https://api.openalex.org/\",   verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/openalexR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","title":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","text":"set tools extract bibliographic content 'OpenAlex' database using API https://docs.openalex.org/api/.","code":""},{"path":[]},{"path":"https://massimoaria.github.io/openalexR/reference/openalexR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","text":"Maintainer: Massimo Aria aria@unina.(ORCID) [copyright holder] Authors: Trang Le grixor@gmail.com (ORCID)","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the OpenAlex authors result — show_authors","title":"Simplify the OpenAlex authors result — show_authors","text":"function mostly package's internal use, export can try . However, expect likely write function simplify result however want.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the OpenAlex authors result — show_authors","text":"","code":"show_authors(x, simp_func = utils::head)"},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the OpenAlex authors result — show_authors","text":"x Dataframe/tibble. Result OpenAlex query authors already converted dataframe/tibble. simp_func R function simplify result. Default `head`. want entire table, set `simp_fun = identity`","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the OpenAlex authors result — show_authors","text":"Simplified tibble display.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify the OpenAlex authors result — show_authors","text":"","code":"show_authors(oa_fetch(   identifier = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE )) #> Requesting url: https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607 #> About to get a total of 1 pages of results with a total of 2 records. #> # A tibble: 2 × 7 #>   short_id    display_name orcid               works_c…¹ cited…² affil…³ top_c…⁴ #>   <chr>       <chr>        <chr>                   <int>   <int> <chr>   <chr>   #> 1 A923435168  Massimo Aria 0000-0002-8517-9411       131    2985 Univer… Statis… #> 2 A2208157607 Jason Priem  0000-0001-6187-6610        49    1623 HortRe… World … #> # … with abbreviated variable names ¹​works_count, ²​cited_by_count, #> #   ³​affiliation_display_name, ⁴​top_concepts"},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the OpenAlex works result — show_works","title":"Simplify the OpenAlex works result — show_works","text":"function mostly package's internal use, export can try . However, expect likely write function simplify result however want.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the OpenAlex works result — show_works","text":"","code":"show_works(x, simp_func = utils::head)"},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the OpenAlex works result — show_works","text":"x Dataframe/tibble. Result OpenAlex query authors already converted dataframe/tibble. simp_func R function simplify result. Default `head`. want entire table, set `simp_fun = identity`.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the OpenAlex works result — show_works","text":"Simplified tibble display.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify the OpenAlex works result — show_works","text":"","code":"show_works(oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   verbose = TRUE )) #> Requesting url: https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973 #> About to get a total of 1 pages of results with a total of 2 records. #> # A tibble: 2 × 8 #>   short_id    display_name             first…¹ last_…² so    url   is_oa top_c…³ #>   <chr>       <chr>                    <chr>   <chr>   <chr> <chr> <lgl> <chr>   #> 1 W2755950973 bibliometrix : An R-too… Massim… Corrad… Jour… http… FALSE Data s… #> 2 W2741809807 The state of OA: a larg… Heathe… Stefan… PeerJ http… TRUE  Citati… #> # … with abbreviated variable names ¹​first_author, ²​last_author, ³​top_concepts"},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-101","dir":"Changelog","previous_headings":"","what":"openalexR 1.0.1","title":"openalexR 1.0.1","text":"Improve snowball #9. Batch queries filter 50 values #18. Bug fixes. Added NEWS.md file track changes package.","code":""},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-100","dir":"Changelog","previous_headings":"","what":"openalexR 1.0.0","title":"openalexR 1.0.0","text":"Breaking change: now uses canonical way filter #7. Added website, hex. Added tests. Added R CMD CHECK GH Action Bug fixes. Added vignettes.","code":""},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-002","dir":"Changelog","previous_headings":"","what":"openalexR 0.0.2","title":"openalexR 0.0.2","text":"bug fixes","code":""},{"path":"https://massimoaria.github.io/openalexR/news/index.html","id":"openalexr-001","dir":"Changelog","previous_headings":"","what":"openalexR 0.0.1","title":"openalexR 0.0.1","text":"CRAN release: 2022-04-22 First CRAN release","code":""}]
